ITinline_prag ('{-#')
ITline_prag (' OPTIONS_HADDOCK hide ')
ITline_prag ('#-}')
WHITE_SPACE ('\n')
ITlineComment ('-----------------------------------------------------------------------------\n')
ITblockComment ('-- |\n')
ITlineComment ('-- Module      :  Language.Haskell.Exts.Annotated.InternalLexer\n')
ITlineComment ('-- Copyright   :  (c) The GHC Team, 1997-2000\n')
ITlineComment ('--                (c) Niklas Broberg, 2004-2009\n')
ITlineComment ('-- License     :  BSD-style (see the file LICENSE.txt)\n')
ITlineComment ('--\n')
ITlineComment ('-- Maintainer  :  Niklas Broberg, d00nibro@chalmers.se\n')
ITlineComment ('-- Stability   :  stable\n')
ITlineComment ('-- Portability :  portable\n')
ITlineComment ('--\n')
ITlineComment ('-- Lexer for Haskell, with some extensions.\n')
ITlineComment ('--\n')
ITlineComment ('-----------------------------------------------------------------------------\n')
WHITE_SPACE ('\n')
ITlineComment ('-- ToDo: Introduce different tokens for decimal, octal and hexadecimal (?)\n')
ITlineComment ('-- ToDo: FloatTok should have three parts (integer part, fraction, exponent) (?)\n')
ITlineComment ('-- ToDo: Use a lexical analyser generator (lx?)\n')
WHITE_SPACE ('\n')
ITmodule ('module')
WHITE_SPACE (' ')
ITconid ('Language.Haskell.Exts.InternalLexer')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Token')
IToparen ('(')
ITdotdot ('..')
ITcparen (')')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('showToken')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('lexer')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('topLexer')
ITcparen (')')
WHITE_SPACE (' ')
ITwhere ('where')
WHITE_SPACE ('\n\n')
ITimport ('import')
WHITE_SPACE (' ')
ITconid ('Language.Haskell.Exts.ParseMonad')
WHITE_SPACE ('\n')
ITimport ('import')
WHITE_SPACE (' ')
ITconid ('Language.Haskell.Exts.SrcLoc')
WHITE_SPACE (' ')
IThiding ('hiding')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('loc')
ITcparen (')')
WHITE_SPACE ('\n')
ITimport ('import')
WHITE_SPACE (' ')
ITconid ('Language.Haskell.Exts.Comments')
WHITE_SPACE ('\n')
ITimport ('import')
WHITE_SPACE (' ')
ITconid ('Language.Haskell.Exts.Extension')
WHITE_SPACE ('\n')
ITimport ('import')
WHITE_SPACE (' ')
ITconid ('Language.Haskell.Exts.ExtScheme')
WHITE_SPACE ('\n\n')
ITimport ('import')
WHITE_SPACE (' ')
ITconid ('Prelude')
WHITE_SPACE (' ')
IThiding ('hiding')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('id')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('exponent')
ITcparen (')')
WHITE_SPACE ('\n')
ITimport ('import')
WHITE_SPACE (' ')
ITconid ('Data.Char')
WHITE_SPACE ('\n')
ITimport ('import')
WHITE_SPACE (' ')
ITconid ('Data.Ratio')
WHITE_SPACE ('\n')
ITimport ('import')
WHITE_SPACE (' ')
ITconid ('Data.List')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('intercalate')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('isPrefixOf')
ITcparen (')')
WHITE_SPACE ('\n')
ITimport ('import')
WHITE_SPACE (' ')
ITconid ('Control.Monad')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('when')
ITcparen (')')
WHITE_SPACE ('\n\n')
ITlineComment ('-- import Debug.Trace (trace)\n')
WHITE_SPACE ('\n')
ITdata ('data')
WHITE_SPACE (' ')
ITconid ('Token')
WHITE_SPACE ('\n        ')
ITequal ('=')
WHITE_SPACE (' ')
ITconid ('VarId')
WHITE_SPACE (' ')
ITconid ('String')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('QVarId')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('String')
ITcomma (',')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('IDupVarId')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('        ')
ITlineComment ('-- duplicable implicit parameter\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('ILinVarId')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('        ')
ITlineComment ('-- linear implicit parameter\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('ConId')
WHITE_SPACE (' ')
ITconid ('String')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('QConId')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('String')
ITcomma (',')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('DVarId')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('String')
ITcbrack (']')
WHITE_SPACE ('       ')
ITlineComment ('-- to enable varid's with '-' in them\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('VarSym')
WHITE_SPACE (' ')
ITconid ('String')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('ConSym')
WHITE_SPACE (' ')
ITconid ('String')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('QVarSym')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('String')
ITcomma (',')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('QConSym')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('String')
ITcomma (',')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('IntTok')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Integer')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('FloatTok')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Rational')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('Character')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Char')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('StringTok')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('String')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('IntTokHash')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Integer')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('        ')
ITlineComment ('-- 1#\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('WordTokHash')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Integer')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('       ')
ITlineComment ('-- 1##\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('FloatTokHash')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Rational')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('     ')
ITlineComment ('-- 1.0#\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('DoubleTokHash')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Rational')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('    ')
ITlineComment ('-- 1.0##\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('CharacterHash')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Char')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('        ')
ITlineComment ('-- c#\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('StringHash')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('String')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('         ')
ITlineComment ('-- "Hello world!"#\n')
WHITE_SPACE ('\n')
ITlineComment ('-- Symbols\n')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('LeftParen')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('RightParen')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('LeftHashParen')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('RightHashParen')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('SemiColon')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('LeftCurly')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('RightCurly')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('VRightCurly')
WHITE_SPACE ('           ')
ITlineComment ('-- a virtual close brace\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('LeftSquare')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('RightSquare')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('ParArrayLeftSquare')
WHITE_SPACE (' ')
ITlineComment ('-- [:\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('ParArrayRightSquare')
WHITE_SPACE (' ')
ITlineComment ('-- :]\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('Comma')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('Underscore')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('BackQuote')
WHITE_SPACE ('\n\n')
ITlineComment ('-- Reserved operators\n')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('Dot')
WHITE_SPACE ('           ')
ITlineComment ('-- reserved for use with 'forall x . x'\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('DotDot')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('Colon')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('QuoteColon')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('DoubleColon')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('Equals')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('Backslash')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('Bar')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('LeftArrow')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('RightArrow')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('At')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('Tilde')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('DoubleArrow')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('Minus')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('Exclamation')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('Star')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('LeftArrowTail')
WHITE_SPACE ('         ')
ITlineComment ('-- >-\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('RightArrowTail')
WHITE_SPACE ('        ')
ITlineComment ('-- -<\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('LeftDblArrowTail')
WHITE_SPACE ('      ')
ITlineComment ('-- >>-\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('RightDblArrowTail')
WHITE_SPACE ('     ')
ITlineComment ('-- -<<\n')
WHITE_SPACE ('\n')
ITlineComment ('-- Template Haskell\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('THExpQuote')
WHITE_SPACE ('            ')
ITlineComment ('-- [| or [e|\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('THPatQuote')
WHITE_SPACE ('            ')
ITlineComment ('-- [p|\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('THDecQuote')
WHITE_SPACE ('            ')
ITlineComment ('-- [d|\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('THTypQuote')
WHITE_SPACE ('            ')
ITlineComment ('-- [t|\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('THCloseQuote')
WHITE_SPACE ('          ')
ITblockComment ('-- |]\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('THIdEscape')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('   ')
ITlineComment ('-- dollar x\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('THParenEscape')
WHITE_SPACE ('         ')
ITlineComment ('-- dollar (\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('THVarQuote')
WHITE_SPACE ('            ')
ITlineComment ('-- 'x (but without the x)\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('THTyQuote')
WHITE_SPACE ('             ')
ITlineComment ('-- ''T (but without the T)\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('THQuasiQuote')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('String')
ITcomma (',')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('  ')
ITlineComment ('-- [$...|...]\n')
WHITE_SPACE ('\n')
ITlineComment ('-- HaRP\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('RPGuardOpen')
WHITE_SPACE ('       ')
ITlineComment ('-- (|\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('RPGuardClose')
WHITE_SPACE ('      ')
ITblockComment ('-- |)\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('RPCAt')
WHITE_SPACE ('             ')
ITlineComment ('-- @:\n')
WHITE_SPACE ('\n')
ITlineComment ('-- Hsx\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('XCodeTagOpen')
WHITE_SPACE ('      ')
ITlineComment ('-- <%\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('XCodeTagClose')
WHITE_SPACE ('     ')
ITlineComment ('-- %>\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('XStdTagOpen')
WHITE_SPACE ('       ')
ITlineComment ('-- <\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('XStdTagClose')
WHITE_SPACE ('      ')
ITlineComment ('-- >\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('XCloseTagOpen')
WHITE_SPACE ('     ')
ITlineComment ('-- </\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('XEmptyTagClose')
WHITE_SPACE ('    ')
ITlineComment ('-- />\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('XChildTagOpen')
WHITE_SPACE ('     ')
ITlineComment ('-- <%> (note that close doesn't exist, it's XCloseTagOpen followed by XCodeTagClose)\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('XPCDATA')
WHITE_SPACE (' ')
ITconid ('String')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('XRPatOpen')
WHITE_SPACE ('             ')
ITlineComment ('-- <[\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('XRPatClose')
WHITE_SPACE ('            ')
ITlineComment ('-- ]>\n')
WHITE_SPACE ('\n')
ITlineComment ('-- Pragmas\n')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('PragmaEnd')
WHITE_SPACE ('                     ')
ITlineComment ('-- #-}\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('RULES')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('INLINE')
WHITE_SPACE (' ')
ITconid ('Bool')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('INLINE_CONLIKE')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('SPECIALISE')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('SPECIALISE_INLINE')
WHITE_SPACE (' ')
ITconid ('Bool')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('SOURCE')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('DEPRECATED')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('WARNING')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('SCC')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('GENERATED')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('CORE')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('UNPACK')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('OPTIONS')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Maybe')
WHITE_SPACE (' ')
ITconid ('String')
ITcomma (',')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('\n')
ITlineComment ('--        | CFILES  String\n')
ITlineComment ('--        | INCLUDE String\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('LANGUAGE')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('ANN')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('MINIMAL')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('NO_OVERLAP')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('OVERLAP')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('INCOHERENT')
WHITE_SPACE ('\n\n')
ITlineComment ('-- Reserved Ids\n')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_As')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_By')
WHITE_SPACE ('         ')
ITlineComment ('-- transform list comprehensions\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Case')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Class')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Data')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Default')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Deriving')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Do')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_MDo')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Else')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Family')
WHITE_SPACE ('     ')
ITlineComment ('-- indexed type families\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Forall')
WHITE_SPACE ('     ')
ITlineComment ('-- universal/existential types\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Group')
WHITE_SPACE ('      ')
ITlineComment ('-- transform list comprehensions\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Hiding')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_If')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Import')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_In')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Infix')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_InfixL')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_InfixR')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Instance')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Let')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Module')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_NewType')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Of')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Proc')
WHITE_SPACE ('       ')
ITlineComment ('-- arrows\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Rec')
WHITE_SPACE ('        ')
ITlineComment ('-- arrows\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Then')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Type')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Using')
WHITE_SPACE ('      ')
ITlineComment ('-- transform list comprehensions\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Where')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Qualified')
WHITE_SPACE ('\n\n                ')
ITlineComment ('-- FFI\n')
WHITE_SPACE ('        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Foreign')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Export')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Safe')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Unsafe')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Threadsafe')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Interruptible')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_StdCall')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_CCall')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_CPlusPlus')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_DotNet')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Jvm')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_Js')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('KW_CApi')
WHITE_SPACE ('\n\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('EOF')
WHITE_SPACE ('\n        ')
ITderiving ('deriving')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Eq')
ITcomma (',')
ITconid ('Show')
ITcparen (')')
WHITE_SPACE ('\n\n')
ITvarid ('reserved_ops')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITobrack ('[')
IToparen ('(')
ITconid ('String')
ITcomma (',')
IToparen ('(')
ITconid ('Token')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('Maybe')
WHITE_SPACE (' ')
ITconid ('ExtScheme')
ITcparen (')')
ITcparen (')')
ITcbrack (']')
WHITE_SPACE ('\n')
ITvarid ('reserved_ops')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITobrack ('[')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('..')
ITstring ('"')
ITcomma (',')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('DotDot')
ITcomma (',')
WHITE_SPACE ('       ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring (':')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('  ')
IToparen ('(')
ITconid ('Colon')
ITcomma (',')
WHITE_SPACE ('        ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('::')
ITstring ('"')
ITcomma (',')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('DoubleColon')
ITcomma (',')
WHITE_SPACE ('  ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('=')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('  ')
IToparen ('(')
ITconid ('Equals')
ITcomma (',')
WHITE_SPACE ('       ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('\\')
ITstring ('"')
ITcomma (',')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Backslash')
ITcomma (',')
WHITE_SPACE ('    ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('|')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('  ')
IToparen ('(')
ITconid ('Bar')
ITcomma (',')
WHITE_SPACE ('          ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('<-')
ITstring ('"')
ITcomma (',')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('LeftArrow')
ITcomma (',')
WHITE_SPACE ('    ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('->')
ITstring ('"')
ITcomma (',')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('RightArrow')
ITcomma (',')
WHITE_SPACE ('   ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('@')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('  ')
IToparen ('(')
ITconid ('At')
ITcomma (',')
WHITE_SPACE ('           ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('@:')
ITstring ('"')
ITcomma (',')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('RPCAt')
ITcomma (',')
WHITE_SPACE ('        ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('RegularPatterns')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('~')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('  ')
IToparen ('(')
ITconid ('Tilde')
ITcomma (',')
WHITE_SPACE ('        ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('=>')
ITstring ('"')
ITcomma (',')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('DoubleArrow')
ITcomma (',')
WHITE_SPACE ('  ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('*')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('  ')
IToparen ('(')
ITconid ('Star')
ITcomma (',')
WHITE_SPACE ('         ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('KindSignatures')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
ITlineComment ('-- Parallel arrays\n')
WHITE_SPACE (' ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('[:')
ITstring ('"')
ITcomma (',')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('ParArrayLeftSquare')
ITcomma (',')
WHITE_SPACE ('   ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('ParallelArrays')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring (':]')
ITstring ('"')
ITcomma (',')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('ParArrayRightSquare')
ITcomma (',')
WHITE_SPACE ('  ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('ParallelArrays')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
ITlineComment ('-- Arrows notation\n')
WHITE_SPACE (' ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('-<')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('  ')
IToparen ('(')
ITconid ('LeftArrowTail')
ITcomma (',')
WHITE_SPACE ('       ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('Arrows')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('>-')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('  ')
IToparen ('(')
ITconid ('RightArrowTail')
ITcomma (',')
WHITE_SPACE ('      ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('Arrows')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('-<<')
ITstring ('"')
ITcomma (',')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('LeftDblArrowTail')
ITcomma (',')
WHITE_SPACE ('    ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('Arrows')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('>>-')
ITstring ('"')
ITcomma (',')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('RightDblArrowTail')
ITcomma (',')
WHITE_SPACE ('   ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('Arrows')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
ITlineComment ('-- Unicode notation\n')
WHITE_SPACE (' ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('\x')
ITstring ('2190')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('    ')
IToparen ('(')
ITconid ('LeftArrow')
ITcomma (',')
WHITE_SPACE ('     ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE ('  ')
ITobrack ('[')
ITconid ('UnicodeSyntax')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('\x')
ITstring ('2192')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('    ')
IToparen ('(')
ITconid ('RightArrow')
ITcomma (',')
WHITE_SPACE ('    ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE ('  ')
ITobrack ('[')
ITconid ('UnicodeSyntax')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('\x')
ITstring ('21d2')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('    ')
IToparen ('(')
ITconid ('DoubleArrow')
ITcomma (',')
WHITE_SPACE ('   ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE ('  ')
ITobrack ('[')
ITconid ('UnicodeSyntax')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('\x')
ITstring ('2237')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('    ')
IToparen ('(')
ITconid ('DoubleColon')
ITcomma (',')
WHITE_SPACE ('   ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE ('  ')
ITobrack ('[')
ITconid ('UnicodeSyntax')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('\x')
ITstring ('2919')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('    ')
IToparen ('(')
ITconid ('LeftArrowTail')
ITcomma (',')
WHITE_SPACE ('     ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('All')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('UnicodeSyntax')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('Arrows')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('\x')
ITstring ('291a')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('    ')
IToparen ('(')
ITconid ('RightArrowTail')
ITcomma (',')
WHITE_SPACE ('    ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('All')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('UnicodeSyntax')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('Arrows')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('\x')
ITstring ('291b')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('    ')
IToparen ('(')
ITconid ('LeftDblArrowTail')
ITcomma (',')
WHITE_SPACE ('  ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('All')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('UnicodeSyntax')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('Arrows')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('\x')
ITstring ('291c')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('    ')
IToparen ('(')
ITconid ('RightDblArrowTail')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('All')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('UnicodeSyntax')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('Arrows')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('\x')
ITstring ('2605')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('    ')
IToparen ('(')
ITconid ('Star')
ITcomma (',')
WHITE_SPACE ('              ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('All')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('UnicodeSyntax')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('KindSignatures')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('\x')
ITstring ('2200')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('    ')
IToparen ('(')
ITconid ('KW_Forall')
ITcomma (',')
WHITE_SPACE ('         ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('All')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('UnicodeSyntax')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('ExplicitForAll')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
WHITE_SPACE ('\n ')
ITcbrack (']')
WHITE_SPACE ('\n\n')
ITvarid ('special_varops')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITobrack ('[')
IToparen ('(')
ITconid ('String')
ITcomma (',')
IToparen ('(')
ITconid ('Token')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('Maybe')
WHITE_SPACE (' ')
ITconid ('ExtScheme')
ITcparen (')')
ITcparen (')')
ITcbrack (']')
WHITE_SPACE ('\n')
ITvarid ('special_varops')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITobrack ('[')
WHITE_SPACE ('\n ')
ITlineComment ('-- the dot is only a special symbol together with forall, but can still be used as function composition\n')
WHITE_SPACE (' ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('.')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('  ')
IToparen ('(')
ITconid ('Dot')
ITcomma (',')
WHITE_SPACE ('          ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('ExplicitForAll')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('ExistentialQuantification')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('-')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('  ')
IToparen ('(')
ITconid ('Minus')
ITcomma (',')
WHITE_SPACE ('        ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('!')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('  ')
IToparen ('(')
ITconid ('Exclamation')
ITcomma (',')
WHITE_SPACE ('  ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
WHITE_SPACE ('\n ')
ITcbrack (']')
WHITE_SPACE ('\n\n')
ITvarid ('reserved_ids')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITobrack ('[')
IToparen ('(')
ITconid ('String')
ITcomma (',')
IToparen ('(')
ITconid ('Token')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('Maybe')
WHITE_SPACE (' ')
ITconid ('ExtScheme')
ITcparen (')')
ITcparen (')')
ITcbrack (']')
WHITE_SPACE ('\n')
ITvarid ('reserved_ids')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITobrack ('[')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('_')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('         ')
IToparen ('(')
ITconid ('Underscore')
ITcomma (',')
WHITE_SPACE ('    ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('by')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('        ')
IToparen ('(')
ITconid ('KW_By')
ITcomma (',')
WHITE_SPACE ('         ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('TransformListComp')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('case')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('      ')
IToparen ('(')
ITconid ('KW_Case')
ITcomma (',')
WHITE_SPACE ('       ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('class')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('     ')
IToparen ('(')
ITconid ('KW_Class')
ITcomma (',')
WHITE_SPACE ('      ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('data')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('      ')
IToparen ('(')
ITconid ('KW_Data')
ITcomma (',')
WHITE_SPACE ('       ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('default')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('   ')
IToparen ('(')
ITconid ('KW_Default')
ITcomma (',')
WHITE_SPACE ('    ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('deriving')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('  ')
IToparen ('(')
ITconid ('KW_Deriving')
ITcomma (',')
WHITE_SPACE ('   ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('do')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('        ')
IToparen ('(')
ITconid ('KW_Do')
ITcomma (',')
WHITE_SPACE ('         ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('else')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('      ')
IToparen ('(')
ITconid ('KW_Else')
ITcomma (',')
WHITE_SPACE ('       ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('family')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('    ')
IToparen ('(')
ITconid ('KW_Family')
ITcomma (',')
WHITE_SPACE ('     ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('TypeFamilies')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('        ')
ITlineComment ('-- indexed type families\n')
WHITE_SPACE (' ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('forall')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('    ')
IToparen ('(')
ITconid ('KW_Forall')
ITcomma (',')
WHITE_SPACE ('     ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('ExplicitForAll')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('ExistentialQuantification')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('    ')
ITlineComment ('-- universal/existential quantification\n')
WHITE_SPACE (' ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('group')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('     ')
IToparen ('(')
ITconid ('KW_Group')
ITcomma (',')
WHITE_SPACE ('      ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('TransformListComp')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('if')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('        ')
IToparen ('(')
ITconid ('KW_If')
ITcomma (',')
WHITE_SPACE ('         ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('import')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('    ')
IToparen ('(')
ITconid ('KW_Import')
ITcomma (',')
WHITE_SPACE ('     ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('in')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('        ')
IToparen ('(')
ITconid ('KW_In')
ITcomma (',')
WHITE_SPACE ('         ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('infix')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('     ')
IToparen ('(')
ITconid ('KW_Infix')
ITcomma (',')
WHITE_SPACE ('      ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('infixl')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('    ')
IToparen ('(')
ITconid ('KW_InfixL')
ITcomma (',')
WHITE_SPACE ('     ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('infixr')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('    ')
IToparen ('(')
ITconid ('KW_InfixR')
ITcomma (',')
WHITE_SPACE ('     ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('instance')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('  ')
IToparen ('(')
ITconid ('KW_Instance')
ITcomma (',')
WHITE_SPACE ('   ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('let')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('       ')
IToparen ('(')
ITconid ('KW_Let')
ITcomma (',')
WHITE_SPACE ('        ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('mdo')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('       ')
IToparen ('(')
ITconid ('KW_MDo')
ITcomma (',')
WHITE_SPACE ('        ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('RecursiveDo')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('module')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('    ')
IToparen ('(')
ITconid ('KW_Module')
ITcomma (',')
WHITE_SPACE ('     ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('newtype')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('   ')
IToparen ('(')
ITconid ('KW_NewType')
ITcomma (',')
WHITE_SPACE ('    ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('of')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('        ')
IToparen ('(')
ITconid ('KW_Of')
ITcomma (',')
WHITE_SPACE ('         ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('proc')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('      ')
IToparen ('(')
ITconid ('KW_Proc')
ITcomma (',')
WHITE_SPACE ('       ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('Arrows')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('rec')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('       ')
IToparen ('(')
ITconid ('KW_Rec')
ITcomma (',')
WHITE_SPACE ('        ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('Arrows')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('RecursiveDo')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('DoRec')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('then')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('      ')
IToparen ('(')
ITconid ('KW_Then')
ITcomma (',')
WHITE_SPACE ('       ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('type')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('      ')
IToparen ('(')
ITconid ('KW_Type')
ITcomma (',')
WHITE_SPACE ('       ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('using')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('     ')
IToparen ('(')
ITconid ('KW_Using')
ITcomma (',')
WHITE_SPACE ('      ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('TransformListComp')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('where')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('     ')
IToparen ('(')
ITconid ('KW_Where')
ITcomma (',')
WHITE_SPACE ('      ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n\n')
ITlineComment ('-- FFI\n')
WHITE_SPACE (' ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('foreign')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('   ')
IToparen ('(')
ITconid ('KW_Foreign')
ITcomma (',')
WHITE_SPACE ('    ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('ForeignFunctionInterface')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
WHITE_SPACE ('\n ')
ITcbrack (']')
WHITE_SPACE ('\n\n\n')
ITvarid ('special_varids')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITobrack ('[')
IToparen ('(')
ITconid ('String')
ITcomma (',')
IToparen ('(')
ITconid ('Token')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('Maybe')
WHITE_SPACE (' ')
ITconid ('ExtScheme')
ITcparen (')')
ITcparen (')')
ITcbrack (']')
WHITE_SPACE ('\n')
ITvarid ('special_varids')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITobrack ('[')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('as')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('        ')
IToparen ('(')
ITconid ('KW_As')
ITcomma (',')
WHITE_SPACE ('         ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('qualified')
ITstring ('"')
ITcomma (',')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('KW_Qualified')
ITcomma (',')
WHITE_SPACE ('  ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('hiding')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('    ')
IToparen ('(')
ITconid ('KW_Hiding')
ITcomma (',')
WHITE_SPACE ('     ')
ITconid ('Nothing')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n\n')
ITlineComment ('-- FFI\n')
WHITE_SPACE (' ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('export')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('        ')
IToparen ('(')
ITconid ('KW_Export')
ITcomma (',')
WHITE_SPACE ('        ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('ForeignFunctionInterface')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('safe')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('          ')
IToparen ('(')
ITconid ('KW_Safe')
ITcomma (',')
WHITE_SPACE ('          ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('ForeignFunctionInterface')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('SafeImports')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('Safe')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('Trustworthy')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('unsafe')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('        ')
IToparen ('(')
ITconid ('KW_Unsafe')
ITcomma (',')
WHITE_SPACE ('        ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('ForeignFunctionInterface')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('threadsafe')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('    ')
IToparen ('(')
ITconid ('KW_Threadsafe')
ITcomma (',')
WHITE_SPACE ('    ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('ForeignFunctionInterface')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('interruptible')
ITstring ('"')
ITcomma (',')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('KW_Interruptible')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('InterruptibleFFI')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('stdcall')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('       ')
IToparen ('(')
ITconid ('KW_StdCall')
ITcomma (',')
WHITE_SPACE ('       ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('ForeignFunctionInterface')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('ccall')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('         ')
IToparen ('(')
ITconid ('KW_CCall')
ITcomma (',')
WHITE_SPACE ('         ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('ForeignFunctionInterface')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('cplusplus')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('     ')
IToparen ('(')
ITconid ('KW_CPlusPlus')
ITcomma (',')
WHITE_SPACE ('     ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('ForeignFunctionInterface')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('dotnet')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('        ')
IToparen ('(')
ITconid ('KW_DotNet')
ITcomma (',')
WHITE_SPACE ('        ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('ForeignFunctionInterface')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('jvm')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('           ')
IToparen ('(')
ITconid ('KW_Jvm')
ITcomma (',')
WHITE_SPACE ('           ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('ForeignFunctionInterface')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('js')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('            ')
IToparen ('(')
ITconid ('KW_Js')
ITcomma (',')
WHITE_SPACE ('            ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('ForeignFunctionInterface')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('capi')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('          ')
IToparen ('(')
ITconid ('KW_CApi')
ITcomma (',')
WHITE_SPACE ('          ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Any')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('CApiFFI')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE (' ')
ITcparen (')')
WHITE_SPACE ('\n ')
ITcbrack (']')
WHITE_SPACE ('\n\n')
ITvarid ('pragmas')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITobrack ('[')
IToparen ('(')
ITconid ('String')
ITcomma (',')
ITconid ('Token')
ITcparen (')')
ITcbrack (']')
WHITE_SPACE ('\n')
ITvarid ('pragmas')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITobrack ('[')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('rules')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('             ')
ITconid ('RULES')
WHITE_SPACE ('           ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('inline')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('            ')
ITconid ('INLINE')
WHITE_SPACE (' ')
ITconid ('True')
WHITE_SPACE ('     ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('noinline')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('          ')
ITconid ('INLINE')
WHITE_SPACE (' ')
ITconid ('False')
WHITE_SPACE ('    ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('notinline')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('         ')
ITconid ('INLINE')
WHITE_SPACE (' ')
ITconid ('False')
WHITE_SPACE ('    ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('specialise')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('        ')
ITconid ('SPECIALISE')
WHITE_SPACE ('      ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('specialize')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('        ')
ITconid ('SPECIALISE')
WHITE_SPACE ('      ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('source')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('            ')
ITconid ('SOURCE')
WHITE_SPACE ('          ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('deprecated')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('        ')
ITconid ('DEPRECATED')
WHITE_SPACE ('      ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('warning')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('           ')
ITconid ('WARNING')
WHITE_SPACE ('         ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('ann')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('               ')
ITconid ('ANN')
WHITE_SPACE ('             ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('scc')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('               ')
ITconid ('SCC')
WHITE_SPACE ('             ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('generated')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('         ')
ITconid ('GENERATED')
WHITE_SPACE ('       ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('core')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('              ')
ITconid ('CORE')
WHITE_SPACE ('            ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('unpack')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('            ')
ITconid ('UNPACK')
WHITE_SPACE ('          ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('language')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('          ')
ITconid ('LANGUAGE')
WHITE_SPACE ('        ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('minimal')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('           ')
ITconid ('MINIMAL')
WHITE_SPACE ('         ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('no_overlap')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('        ')
ITconid ('NO_OVERLAP')
WHITE_SPACE ('      ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('overlap')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('           ')
ITconid ('OVERLAP')
WHITE_SPACE ('         ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('incoherent')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('        ')
ITconid ('INCOHERENT')
WHITE_SPACE ('      ')
ITcparen (')')
ITcomma (',')
WHITE_SPACE ('\n ')
IToparen ('(')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('options')
ITstring ('"')
ITcomma (',')
WHITE_SPACE ('           ')
ITconid ('OPTIONS')
WHITE_SPACE (' ')
ITvarid ('undefined')
WHITE_SPACE (' ')
ITcparen (')')
WHITE_SPACE (' ')
ITlineComment ('-- we'll tweak it before use - promise!\n')
ITlineComment ('-- ( "cfiles",            CFILES  undefined ), -- same here...\n')
ITlineComment ('-- ( "include",           INCLUDE undefined )  -- ...and here!\n')
WHITE_SPACE (' ')
ITcbrack (']')
WHITE_SPACE ('\n\n')
ITvarid ('isIdent')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('isHSymbol')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('isPragmaChar')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Char')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Bool')
WHITE_SPACE ('\n')
ITvarid ('isIdent')
WHITE_SPACE ('   ')
ITvarid ('c')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('isAlpha')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('||')
WHITE_SPACE (' ')
ITvarid ('isDigit')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('||')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('==')
WHITE_SPACE (' ')
ITchar (''\''')
WHITE_SPACE (' ')
ITvarsym ('||')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('==')
WHITE_SPACE (' ')
ITchar (''_'')
WHITE_SPACE ('\n\n')
ITvarid ('isHSymbol')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITstring ('"')
ITstring (':!#%&*./?@')
ITstring ('\\')
ITstring ('-')
ITstring ('"')
WHITE_SPACE (' ')
ITvarsym ('||')
WHITE_SPACE (' ')
IToparen ('(')
IToparen ('(')
ITvarid ('isSymbol')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('||')
WHITE_SPACE (' ')
ITvarid ('isPunctuation')
WHITE_SPACE (' ')
ITvarid ('c')
ITcparen (')')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITvarid ('not')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('(),;[]`{}_\"'')
ITstring ('"')
ITcparen (')')
ITcparen (')')
WHITE_SPACE ('\n\n')
ITvarid ('isPragmaChar')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('isAlphaNum')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('||')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('==')
WHITE_SPACE (' ')
ITchar (''_'')
WHITE_SPACE ('\n\n')
ITvarid ('matchChar')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Char')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('String')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
IToparen ('(')
ITcparen (')')
WHITE_SPACE ('\n')
ITvarid ('matchChar')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarid ('msg')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITvarid ('s')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n    ')
ITif ('if')
WHITE_SPACE (' ')
ITvarid ('null')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITvarsym ('||')
WHITE_SPACE (' ')
ITvarid ('head')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITvarsym ('/=')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITthen ('then')
WHITE_SPACE (' ')
ITvarid ('fail')
WHITE_SPACE (' ')
ITvarid ('msg')
WHITE_SPACE (' ')
ITelse ('else')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n\n')
ITlineComment ('-- The top-level lexer.\n')
ITlineComment ('-- We need to know whether we are at the beginning of the line to decide\n')
ITlineComment ('-- whether to insert layout tokens.\n')
WHITE_SPACE ('\n')
ITvarid ('lexer')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Loc')
WHITE_SPACE (' ')
ITconid ('Token')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('P')
WHITE_SPACE (' ')
ITvarid ('a')
ITcparen (')')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('P')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE ('\n')
ITvarid ('lexer')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('runL')
WHITE_SPACE (' ')
ITvarid ('topLexer')
WHITE_SPACE ('\n\n')
ITvarid ('topLexer')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Loc')
WHITE_SPACE (' ')
ITconid ('Token')
ITcparen (')')
WHITE_SPACE ('\n')
ITvarid ('topLexer')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITvarid ('b')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('pullCtxtFlag')
WHITE_SPACE ('\n    ')
ITif ('if')
WHITE_SPACE (' ')
ITvarid ('b')
WHITE_SPACE (' ')
ITthen ('then')
WHITE_SPACE (' ')
ITlineComment ('-- trace (show cf ++ ": " ++ show VRightCurly) $\n')
WHITE_SPACE ('              ')
ITlineComment ('-- the lex context state flags that we must do an empty {} - UGLY\n')
WHITE_SPACE ('              ')
ITvarid ('setBOL')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('getSrcLocL')
WHITE_SPACE (' ')
ITvarsym ('>>=')
WHITE_SPACE (' ')
ITvarsym ('\')
ITvarid ('l')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Loc')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('mkSrcSpan')
WHITE_SPACE (' ')
ITvarid ('l')
WHITE_SPACE (' ')
ITvarid ('l')
ITcparen (')')
WHITE_SPACE (' ')
ITconid ('VRightCurly')
ITcparen (')')
WHITE_SPACE ('\n     ')
ITelse ('else')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n        ')
ITvarid ('bol')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('checkBOL')
WHITE_SPACE ('\n        ')
IToparen ('(')
ITvarid ('bol'')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('ws')
ITcparen (')')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhiteSpace')
WHITE_SPACE (' ')
ITvarid ('bol')
WHITE_SPACE ('\n        ')
ITlineComment ('-- take care of whitespace in PCDATA\n')
WHITE_SPACE ('        ')
ITvarid ('ec')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getExtContext')
WHITE_SPACE ('\n        ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('ec')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n         ')
ITlineComment ('-- if there was no linebreak, and we are lexing PCDATA,\n')
WHITE_SPACE ('         ')
ITlineComment ('-- then we want to care about the whitespace.\n')
WHITE_SPACE ('         ')
ITlineComment ('-- We don't bother to test for XmlSyntax, since we\n')
WHITE_SPACE ('         ')
ITlineComment ('-- couldn't end up in ChildCtxt otherwise.\n')
WHITE_SPACE ('         ')
ITconid ('Just')
WHITE_SPACE (' ')
ITconid ('ChildCtxt')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('not')
WHITE_SPACE (' ')
ITvarid ('bol'')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITvarid ('ws')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('getSrcLocL')
WHITE_SPACE (' ')
ITvarsym ('>>=')
WHITE_SPACE (' ')
ITvarsym ('\')
ITvarid ('l')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('Loc')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('mkSrcSpan')
WHITE_SPACE (' ')
ITvarid ('l')
WHITE_SPACE (' ')
ITvarid ('l')
ITcparen (')')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('XPCDATA')
WHITE_SPACE (' ')
ITstring ('"')
ITstring (' ')
ITstring ('"')
WHITE_SPACE ('\n         ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('startToken')
WHITE_SPACE ('\n                 ')
ITvarid ('sl')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getSrcLocL')
WHITE_SPACE ('\n                 ')
ITvarid ('t')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITif ('if')
WHITE_SPACE (' ')
ITvarid ('bol'')
WHITE_SPACE (' ')
ITthen ('then')
WHITE_SPACE (' ')
ITvarid ('lexBOL')
WHITE_SPACE ('    ')
ITlineComment ('-- >>= \t -> trace ("BOL: " ++ show t) (return t)\n')
WHITE_SPACE ('                              ')
ITelse ('else')
WHITE_SPACE (' ')
ITvarid ('lexToken')
WHITE_SPACE ('  ')
ITlineComment ('-- >>= \t -> trace (show t) (return t)\n')
WHITE_SPACE ('                 ')
ITvarid ('el')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getSrcLocL')
WHITE_SPACE ('\n                 ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('Loc')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('mkSrcSpan')
WHITE_SPACE (' ')
ITvarid ('sl')
WHITE_SPACE (' ')
ITvarid ('el')
ITcparen (')')
WHITE_SPACE (' ')
ITvarid ('t')
WHITE_SPACE ('\n\n')
ITvarid ('lexWhiteSpace')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Bool')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Bool')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('Bool')
ITcparen (')')
WHITE_SPACE ('\n')
ITvarid ('lexWhiteSpace')
WHITE_SPACE (' ')
ITvarid ('bol')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITvarid ('s')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n    ')
ITvarid ('ignL')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('ignoreLinePragmasL')
WHITE_SPACE ('\n    ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n        ')
ITlineComment ('-- If we find a recognised pragma, we don't want to treat it as a comment.\n')
WHITE_SPACE ('        ')
ITchar (''{'')
ITcolon (':')
ITchar (''-'')
ITcolon (':')
ITchar (''#'')
ITcolon (':')
ITvarid ('rest')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isRecognisedPragma')
WHITE_SPACE (' ')
ITvarid ('rest')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('bol')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('False')
ITcparen (')')
WHITE_SPACE ('\n                         ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isLinePragma')
WHITE_SPACE (' ')
ITvarid ('rest')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITvarid ('not')
WHITE_SPACE (' ')
ITvarid ('ignL')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                            ')
IToparen ('(')
ITvarid ('l')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('fn')
ITcparen (')')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexLinePragma')
WHITE_SPACE ('\n                            ')
ITvarid ('setSrcLineL')
WHITE_SPACE (' ')
ITvarid ('l')
WHITE_SPACE ('\n                            ')
ITvarid ('setLineFilenameL')
WHITE_SPACE (' ')
ITvarid ('fn')
WHITE_SPACE ('\n                            ')
ITvarid ('lexWhiteSpace')
WHITE_SPACE (' ')
ITconid ('True')
WHITE_SPACE ('\n        ')
ITchar (''{'')
ITcolon (':')
ITchar (''-'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n            ')
ITvarid ('loc')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getSrcLocL')
WHITE_SPACE ('\n            ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n            ')
IToparen ('(')
ITvarid ('bol1')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('c')
ITcparen (')')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexNestedComment')
WHITE_SPACE (' ')
ITvarid ('bol')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('"')
WHITE_SPACE ('\n            ')
ITvarid ('loc2')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getSrcLocL')
WHITE_SPACE ('\n            ')
ITvarid ('pushComment')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('Comment')
WHITE_SPACE (' ')
ITconid ('True')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('mkSrcSpan')
WHITE_SPACE (' ')
ITvarid ('loc')
WHITE_SPACE (' ')
ITvarid ('loc2')
ITcparen (')')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('reverse')
WHITE_SPACE (' ')
ITvarid ('c')
ITcparen (')')
WHITE_SPACE ('\n            ')
IToparen ('(')
ITvarid ('bol2')
ITcomma (',')
WHITE_SPACE (' ')
ITunderscore ('_')
ITcparen (')')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhiteSpace')
WHITE_SPACE (' ')
ITvarid ('bol1')
WHITE_SPACE ('\n            ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('bol2')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('True')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''-'')
ITcolon (':')
ITchar (''-'')
ITcolon (':')
ITvarid ('s1')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('all')
WHITE_SPACE (' ')
IToparen ('(')
ITvarsym ('==')
WHITE_SPACE (' ')
ITchar (''-'')
ITcparen (')')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('takeWhile')
WHITE_SPACE (' ')
ITvarid ('isHSymbol')
WHITE_SPACE (' ')
ITvarid ('s1')
ITcparen (')')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n            ')
ITvarid ('loc')
WHITE_SPACE ('    ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getSrcLocL')
WHITE_SPACE ('\n            ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n            ')
ITvarid ('dashes')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
IToparen ('(')
ITvarsym ('==')
WHITE_SPACE (' ')
ITchar (''-'')
ITcparen (')')
WHITE_SPACE ('\n            ')
ITvarid ('rest')
WHITE_SPACE ('   ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
IToparen ('(')
ITvarsym ('/=')
WHITE_SPACE (' ')
ITchar (''\n'')
ITcparen (')')
WHITE_SPACE ('\n            ')
ITvarid ('s'')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n            ')
ITvarid ('loc2')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getSrcLocL')
WHITE_SPACE ('\n            ')
ITlet ('let')
WHITE_SPACE (' ')
ITvarid ('com')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITconid ('Comment')
WHITE_SPACE (' ')
ITconid ('False')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('mkSrcSpan')
WHITE_SPACE (' ')
ITvarid ('loc')
WHITE_SPACE (' ')
ITvarid ('loc2')
ITcparen (')')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITvarid ('dashes')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITvarid ('rest')
WHITE_SPACE ('\n            ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('s'')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                ')
ITobrack ('[')
ITcbrack (']')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('pushComment')
WHITE_SPACE (' ')
ITvarid ('com')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('False')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('True')
ITcparen (')')
WHITE_SPACE ('\n                ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                    ')
ITvarid ('pushComment')
WHITE_SPACE (' ')
ITvarid ('com')
WHITE_SPACE ('\n                    ')
ITvarid ('lexNewline')
WHITE_SPACE ('\n                    ')
ITvarid ('lexWhiteSpace_')
WHITE_SPACE (' ')
ITconid ('True')
WHITE_SPACE ('\n                    ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('True')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('True')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''\n'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n            ')
ITvarid ('lexNewline')
WHITE_SPACE ('\n            ')
ITvarid ('lexWhiteSpace_')
WHITE_SPACE (' ')
ITconid ('True')
WHITE_SPACE ('\n            ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('True')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('True')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''\t'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n            ')
ITvarid ('lexTab')
WHITE_SPACE ('\n            ')
IToparen ('(')
ITvarid ('bol'')
ITcomma (',')
WHITE_SPACE (' ')
ITunderscore ('_')
ITcparen (')')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhiteSpace')
WHITE_SPACE (' ')
ITvarid ('bol')
WHITE_SPACE ('\n            ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('bol'')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('True')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITvarid ('c')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isSpace')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n            ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n            ')
IToparen ('(')
ITvarid ('bol'')
ITcomma (',')
WHITE_SPACE (' ')
ITunderscore ('_')
ITcparen (')')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhiteSpace')
WHITE_SPACE (' ')
ITvarid ('bol')
WHITE_SPACE ('\n            ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('bol'')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('True')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('bol')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('False')
ITcparen (')')
WHITE_SPACE ('\n\n')
ITblockComment ('-- | lexWhiteSpace without the return value.\n')
ITvarid ('lexWhiteSpace_')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Bool')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
IToparen ('(')
ITcparen (')')
WHITE_SPACE ('\n')
ITvarid ('lexWhiteSpace_')
WHITE_SPACE (' ')
ITvarid ('bol')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE ('  ')
ITdo ('do')
WHITE_SPACE (' ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhiteSpace')
WHITE_SPACE (' ')
ITvarid ('bol')
WHITE_SPACE ('\n                         ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITcparen (')')
WHITE_SPACE ('\n\n')
ITvarid ('isRecognisedPragma')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('isLinePragma')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('String')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Bool')
WHITE_SPACE ('\n')
ITvarid ('isRecognisedPragma')
WHITE_SPACE (' ')
ITvarid ('str')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITlet ('let')
WHITE_SPACE (' ')
ITvarid ('pragma')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('takeWhile')
WHITE_SPACE (' ')
ITvarid ('isPragmaChar')
WHITE_SPACE (' ')
ITvarsym ('.')
WHITE_SPACE (' ')
ITvarid ('dropWhile')
WHITE_SPACE (' ')
ITvarid ('isSpace')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITvarid ('str')
WHITE_SPACE ('\n                          ')
ITin ('in')
WHITE_SPACE (' ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('lookupKnownPragma')
WHITE_SPACE (' ')
ITvarid ('pragma')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                              ')
ITconid ('Nothing')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('False')
WHITE_SPACE ('\n                              ')
ITunderscore ('_')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('True')
WHITE_SPACE ('\n\n')
ITvarid ('isLinePragma')
WHITE_SPACE (' ')
ITvarid ('str')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITlet ('let')
WHITE_SPACE (' ')
ITvarid ('pragma')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('map')
WHITE_SPACE (' ')
ITvarid ('toLower')
WHITE_SPACE (' ')
ITvarsym ('.')
WHITE_SPACE (' ')
ITvarid ('takeWhile')
WHITE_SPACE (' ')
ITvarid ('isAlphaNum')
WHITE_SPACE (' ')
ITvarsym ('.')
WHITE_SPACE (' ')
ITvarid ('dropWhile')
WHITE_SPACE (' ')
ITvarid ('isSpace')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITvarid ('str')
WHITE_SPACE ('\n                    ')
ITin ('in')
WHITE_SPACE (' ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('pragma')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                        ')
ITstring ('"')
ITstring ('line')
ITstring ('"')
WHITE_SPACE ('  ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('True')
WHITE_SPACE ('\n                        ')
ITunderscore ('_')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('False')
WHITE_SPACE ('\n\n')
ITvarid ('lexLinePragma')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Int')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('\n')
ITvarid ('lexLinePragma')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE ('   ')
ITlineComment ('-- {-#\n')
WHITE_SPACE ('    ')
ITvarid ('lexWhile_')
WHITE_SPACE (' ')
ITvarid ('isSpace')
WHITE_SPACE ('\n    ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('4')
WHITE_SPACE ('   ')
ITlineComment ('-- LINE\n')
WHITE_SPACE ('    ')
ITvarid ('lexWhile_')
WHITE_SPACE (' ')
ITvarid ('isSpace')
WHITE_SPACE ('\n    ')
ITvarid ('i')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
ITvarid ('isDigit')
WHITE_SPACE ('\n    ')
ITvarid ('when')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('null')
WHITE_SPACE (' ')
ITvarid ('i')
ITcparen (')')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITvarid ('fail')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('Improperly formatted LINE pragma')
ITstring ('"')
WHITE_SPACE ('\n    ')
ITvarid ('lexWhile_')
WHITE_SPACE (' ')
ITvarid ('isSpace')
WHITE_SPACE ('\n    ')
ITvarid ('matchChar')
WHITE_SPACE (' ')
ITchar (''"'')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('Improperly formatted LINE pragma')
ITstring ('"')
WHITE_SPACE ('\n    ')
ITvarid ('fn')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
IToparen ('(')
ITvarsym ('/=')
WHITE_SPACE (' ')
ITchar (''"'')
ITcparen (')')
WHITE_SPACE ('\n    ')
ITvarid ('matchChar')
WHITE_SPACE (' ')
ITchar (''"'')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('Impossible - lexLinePragma')
ITstring ('"')
WHITE_SPACE ('\n    ')
ITvarid ('lexWhile_')
WHITE_SPACE (' ')
ITvarid ('isSpace')
WHITE_SPACE ('\n    ')
ITvarid ('mapM_')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('flip')
WHITE_SPACE (' ')
ITvarid ('matchChar')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('Improperly formatted LINE pragma')
ITstring ('"')
ITcparen (')')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('#-}')
ITstring ('"')
WHITE_SPACE ('\n    ')
ITvarid ('lexNewline')
WHITE_SPACE ('\n    ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('read')
WHITE_SPACE (' ')
ITvarid ('i')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('fn')
ITcparen (')')
WHITE_SPACE ('\n\n')
ITvarid ('lexNestedComment')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Bool')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('String')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Bool')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('\n')
ITvarid ('lexNestedComment')
WHITE_SPACE (' ')
ITvarid ('bol')
WHITE_SPACE (' ')
ITvarid ('str')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITvarid ('s')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n    ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n        ')
ITchar (''-'')
ITcolon (':')
ITchar (''}'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('bol')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('str')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''{'')
ITcolon (':')
ITchar (''-'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n            ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n            ')
IToparen ('(')
ITvarid ('bol'')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('c')
ITcparen (')')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexNestedComment')
WHITE_SPACE (' ')
ITvarid ('bol')
WHITE_SPACE (' ')
IToparen ('(')
ITstring ('"')
ITstring ('-{')
ITstring ('"')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITvarid ('str')
ITcparen (')')
WHITE_SPACE (' ')
ITlineComment ('-- rest of the subcomment\n')
WHITE_SPACE ('            ')
ITvarid ('lexNestedComment')
WHITE_SPACE (' ')
ITvarid ('bol'')
WHITE_SPACE (' ')
IToparen ('(')
ITstring ('"')
ITstring ('}-')
ITstring ('"')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE ('  ')
ITcparen (')')
WHITE_SPACE (' ')
ITlineComment ('-- rest of this comment\n')
WHITE_SPACE ('        ')
ITchar (''\t'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('    ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('lexTab')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('lexNestedComment')
WHITE_SPACE (' ')
ITvarid ('bol')
WHITE_SPACE (' ')
IToparen ('(')
ITchar (''\t'')
ITcolon (':')
ITvarid ('str')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''\n'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('    ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('lexNewline')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('lexNestedComment')
WHITE_SPACE (' ')
ITconid ('True')
WHITE_SPACE (' ')
IToparen ('(')
ITchar (''\n'')
ITcolon (':')
ITvarid ('str')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITvarid ('c')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('lexNestedComment')
WHITE_SPACE (' ')
ITvarid ('bol')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('c')
ITcolon (':')
ITvarid ('str')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITobrack ('[')
ITcbrack (']')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('fail')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('Unterminated nested comment')
ITstring ('"')
WHITE_SPACE ('\n\n')
ITlineComment ('-- When we are lexing the first token of a line, check whether we need to\n')
ITlineComment ('-- insert virtual semicolons or close braces due to layout.\n')
WHITE_SPACE ('\n')
ITvarid ('lexBOL')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
ITconid ('Token')
WHITE_SPACE ('\n')
ITvarid ('lexBOL')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITvarid ('pos')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getOffside')
WHITE_SPACE ('\n    ')
ITlineComment ('-- trace ("Off: " ++ (show pos)) $ do\n')
WHITE_SPACE ('    ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('pos')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n        ')
ITconid ('LT')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                ')
ITlineComment ('-- trace "layout: inserting '}'\n" $\n')
WHITE_SPACE ('            ')
ITlineComment ('-- Set col to 0, indicating that we're still at the\n')
WHITE_SPACE ('            ')
ITlineComment ('-- beginning of the line, in case we need a semi-colon too.\n')
WHITE_SPACE ('            ')
ITlineComment ('-- Also pop the context here, so that we don't insert\n')
WHITE_SPACE ('            ')
ITlineComment ('-- another close brace before the parser can pop it.\n')
WHITE_SPACE ('            ')
ITvarid ('setBOL')
WHITE_SPACE ('\n            ')
ITvarid ('popContextL')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('lexBOL')
ITstring ('"')
WHITE_SPACE ('\n            ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('VRightCurly')
WHITE_SPACE ('\n        ')
ITconid ('EQ')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('\n            ')
ITlineComment ('-- trace "layout: inserting ';'\n" $\n')
WHITE_SPACE ('            ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('SemiColon')
WHITE_SPACE ('\n        ')
ITconid ('GT')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('lexToken')
WHITE_SPACE ('\n\n')
ITvarid ('lexToken')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
ITconid ('Token')
WHITE_SPACE ('\n')
ITvarid ('lexToken')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITvarid ('ec')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getExtContext')
WHITE_SPACE ('\n    ')
ITlineComment ('-- we don't bother to check XmlSyntax since we couldn't\n')
WHITE_SPACE ('    ')
ITlineComment ('-- have ended up in a non-Nothing context if it wasn't\n')
WHITE_SPACE ('    ')
ITlineComment ('-- enabled.\n')
WHITE_SPACE ('    ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('ec')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n     ')
ITconid ('Just')
WHITE_SPACE (' ')
ITconid ('HarpCtxt')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('lexHarpToken')
WHITE_SPACE ('\n     ')
ITconid ('Just')
WHITE_SPACE (' ')
ITconid ('TagCtxt')
WHITE_SPACE ('      ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('lexTagCtxt')
WHITE_SPACE ('\n     ')
ITconid ('Just')
WHITE_SPACE (' ')
ITconid ('CloseTagCtxt')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('lexCloseTagCtxt')
WHITE_SPACE ('\n     ')
ITconid ('Just')
WHITE_SPACE (' ')
ITconid ('ChildCtxt')
WHITE_SPACE ('    ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('lexChildCtxt')
WHITE_SPACE ('\n     ')
ITconid ('Just')
WHITE_SPACE (' ')
ITconid ('CodeTagCtxt')
WHITE_SPACE ('  ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('lexCodeTagCtxt')
WHITE_SPACE ('\n     ')
ITunderscore ('_')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('lexStdToken')
WHITE_SPACE ('\n\n\n')
ITvarid ('lexChildCtxt')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
ITconid ('Token')
WHITE_SPACE ('\n')
ITvarid ('lexChildCtxt')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITlineComment ('-- if we ever end up here, then XmlSyntax must be on.\n')
WHITE_SPACE ('    ')
ITvarid ('s')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n    ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n        ')
ITchar (''<'')
ITcolon (':')
ITchar (''%'')
ITcolon (':')
ITchar (''>'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE ('\n                            ')
ITvarid ('pushExtContextL')
WHITE_SPACE (' ')
ITconid ('ChildCtxt')
WHITE_SPACE ('\n                            ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('XChildTagOpen')
WHITE_SPACE ('\n        ')
ITchar (''<'')
ITcolon (':')
ITchar (''%'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n                        ')
ITvarid ('pushExtContextL')
WHITE_SPACE (' ')
ITconid ('CodeTagCtxt')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('XCodeTagOpen')
WHITE_SPACE ('\n        ')
ITchar (''<'')
ITcolon (':')
ITchar (''/'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n                        ')
ITvarid ('popExtContextL')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('lexChildCtxt')
ITstring ('"')
WHITE_SPACE ('\n                        ')
ITvarid ('pushExtContextL')
WHITE_SPACE (' ')
ITconid ('CloseTagCtxt')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('XCloseTagOpen')
WHITE_SPACE ('\n        ')
ITchar (''<'')
ITcolon (':')
ITchar (''['')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n                        ')
ITvarid ('pushExtContextL')
WHITE_SPACE (' ')
ITconid ('HarpCtxt')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('XRPatOpen')
WHITE_SPACE ('\n        ')
ITchar (''<'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                        ')
ITvarid ('pushExtContextL')
WHITE_SPACE (' ')
ITconid ('TagCtxt')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('XStdTagOpen')
WHITE_SPACE ('\n        ')
ITunderscore ('_')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('lexPCDATA')
WHITE_SPACE ('\n\n\n')
ITvarid ('lexPCDATA')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
ITconid ('Token')
WHITE_SPACE ('\n')
ITvarid ('lexPCDATA')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITlineComment ('-- if we ever end up here, then XmlSyntax must be on.\n')
WHITE_SPACE ('    ')
ITvarid ('s')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n    ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n        ')
ITobrack ('[')
ITcbrack (']')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('EOF')
WHITE_SPACE ('\n        ')
ITunderscore ('_')
WHITE_SPACE ('  ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n            ')
ITchar (''\n'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                ')
ITvarid ('x')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexNewline')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('lexPCDATA')
WHITE_SPACE ('\n                ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('x')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                 ')
ITconid ('XPCDATA')
WHITE_SPACE (' ')
ITvarid ('p')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('XPCDATA')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITchar (''\n'')
ITcolon (':')
ITvarid ('p')
WHITE_SPACE ('\n                 ')
ITconid ('EOF')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('EOF')
WHITE_SPACE ('\n                 ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('fail')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('lexPCDATA: unexpected token: ')
ITstring ('"')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITvarid ('show')
WHITE_SPACE (' ')
ITvarid ('x')
WHITE_SPACE ('\n            ')
ITchar (''<'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('XPCDATA')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('"')
WHITE_SPACE ('\n            ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITlet ('let')
WHITE_SPACE (' ')
ITvarid ('pcd')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('takeWhile')
WHITE_SPACE (' ')
IToparen ('(')
ITvarsym ('\')
ITvarid ('c')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarid ('`notElem`')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('<')
ITstring ('\n')
ITstring ('"')
ITcparen (')')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE ('\n                        ')
ITvarid ('l')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('length')
WHITE_SPACE (' ')
ITvarid ('pcd')
WHITE_SPACE ('\n                    ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITvarid ('l')
WHITE_SPACE ('\n                    ')
ITvarid ('x')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexPCDATA')
WHITE_SPACE ('\n                    ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('x')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                     ')
ITconid ('XPCDATA')
WHITE_SPACE (' ')
ITvarid ('pcd'')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('XPCDATA')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITvarid ('pcd')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITvarid ('pcd'')
WHITE_SPACE ('\n                     ')
ITconid ('EOF')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('EOF')
WHITE_SPACE ('\n                     ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('fail')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('lexPCDATA: unexpected token: ')
ITstring ('"')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITvarid ('show')
WHITE_SPACE (' ')
ITvarid ('x')
WHITE_SPACE ('\n\n\n')
ITvarid ('lexCodeTagCtxt')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
ITconid ('Token')
WHITE_SPACE ('\n')
ITvarid ('lexCodeTagCtxt')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITlineComment ('-- if we ever end up here, then XmlSyntax must be on.\n')
WHITE_SPACE ('    ')
ITvarid ('s')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n    ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n        ')
ITchar (''%'')
ITcolon (':')
ITchar (''>'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n                        ')
ITvarid ('popExtContextL')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('lexCodeTagContext')
ITstring ('"')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('XCodeTagClose')
WHITE_SPACE ('\n        ')
ITunderscore ('_')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('lexStdToken')
WHITE_SPACE ('\n\n')
ITvarid ('lexCloseTagCtxt')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
ITconid ('Token')
WHITE_SPACE ('\n')
ITvarid ('lexCloseTagCtxt')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITlineComment ('-- if we ever end up here, then XmlSyntax must be on.\n')
WHITE_SPACE ('    ')
ITvarid ('s')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n    ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n        ')
ITchar (''%'')
ITcolon (':')
ITchar (''>'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n                        ')
ITvarid ('popExtContextL')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('lexCloseTagCtxt')
ITstring ('"')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('XCodeTagClose')
WHITE_SPACE ('\n        ')
ITchar (''>'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                        ')
ITvarid ('popExtContextL')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('lexCloseTagCtxt')
ITstring ('"')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('XStdTagClose')
WHITE_SPACE ('\n        ')
ITunderscore ('_')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('lexStdToken')
WHITE_SPACE ('\n\n')
ITvarid ('lexTagCtxt')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
ITconid ('Token')
WHITE_SPACE ('\n')
ITvarid ('lexTagCtxt')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITlineComment ('-- if we ever end up here, then XmlSyntax must be on.\n')
WHITE_SPACE ('    ')
ITvarid ('s')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n    ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n        ')
ITchar (''/'')
ITcolon (':')
ITchar (''>'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n                        ')
ITvarid ('popExtContextL')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('lexTagCtxt: Empty tag')
ITstring ('"')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('XEmptyTagClose')
WHITE_SPACE ('\n        ')
ITchar (''>'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                        ')
ITvarid ('popExtContextL')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('lexTagCtxt: Standard tag')
ITstring ('"')
WHITE_SPACE ('\n                        ')
ITvarid ('pushExtContextL')
WHITE_SPACE (' ')
ITconid ('ChildCtxt')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('XStdTagClose')
WHITE_SPACE ('\n        ')
ITunderscore ('_')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('lexStdToken')
WHITE_SPACE ('\n\n')
ITvarid ('lexHarpToken')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
ITconid ('Token')
WHITE_SPACE ('\n')
ITvarid ('lexHarpToken')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITlineComment ('-- if we ever end up here, then RegularPatterns must be on.\n')
WHITE_SPACE ('    ')
ITvarid ('s')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n    ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n        ')
ITchar ('']'')
ITcolon (':')
ITchar (''>'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n                        ')
ITvarid ('popExtContextL')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('lexHarpToken')
ITstring ('"')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('XRPatClose')
WHITE_SPACE ('\n        ')
ITunderscore ('_')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('lexStdToken')
WHITE_SPACE ('\n\n')
ITvarid ('lexStdToken')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
ITconid ('Token')
WHITE_SPACE ('\n')
ITvarid ('lexStdToken')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITvarid ('s')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n    ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getExtensionsL')
WHITE_SPACE ('\n    ')
ITlet ('let')
WHITE_SPACE (' ')
ITvarid ('intHash')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('lexHash')
WHITE_SPACE (' ')
ITconid ('IntTok')
WHITE_SPACE (' ')
ITconid ('IntTokHash')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Right')
WHITE_SPACE (' ')
ITconid ('WordTokHash')
ITcparen (')')
WHITE_SPACE ('\n    ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n        ')
ITobrack ('[')
ITcbrack (']')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('EOF')
WHITE_SPACE ('\n\n        ')
ITchar (''0'')
ITcolon (':')
ITvarid ('c')
ITcolon (':')
ITvarid ('d')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('toLower')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('==')
WHITE_SPACE (' ')
ITchar (''o'')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITvarid ('isOctDigit')
WHITE_SPACE (' ')
ITvarid ('d')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n                        ')
IToparen ('(')
ITvarid ('n')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('str')
ITcparen (')')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexOctal')
WHITE_SPACE ('\n                        ')
ITvarid ('con')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('intHash')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('con')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('n')
ITcomma (',')
WHITE_SPACE (' ')
ITchar (''0'')
ITcolon (':')
ITvarid ('c')
ITcolon (':')
ITvarid ('str')
ITcparen (')')
ITcparen (')')
WHITE_SPACE ('\n                  ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('toLower')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('==')
WHITE_SPACE (' ')
ITchar (''b'')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITvarid ('isBinDigit')
WHITE_SPACE (' ')
ITvarid ('d')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITconid ('BinaryLiterals')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n                        ')
IToparen ('(')
ITvarid ('n')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('str')
ITcparen (')')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexBinary')
WHITE_SPACE ('\n                        ')
ITvarid ('con')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('intHash')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('con')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('n')
ITcomma (',')
WHITE_SPACE (' ')
ITchar (''0'')
ITcolon (':')
ITvarid ('c')
ITcolon (':')
ITvarid ('str')
ITcparen (')')
ITcparen (')')
WHITE_SPACE ('\n                  ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('toLower')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('==')
WHITE_SPACE (' ')
ITchar (''x'')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITvarid ('isHexDigit')
WHITE_SPACE (' ')
ITvarid ('d')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n                        ')
IToparen ('(')
ITvarid ('n')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('str')
ITcparen (')')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexHexadecimal')
WHITE_SPACE ('\n                        ')
ITvarid ('con')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('intHash')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('con')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('n')
ITcomma (',')
WHITE_SPACE (' ')
ITchar (''0'')
ITcolon (':')
ITvarid ('c')
ITcolon (':')
ITvarid ('str')
ITcparen (')')
ITcparen (')')
WHITE_SPACE ('\n\n        ')
ITlineComment ('-- implicit parameters\n')
WHITE_SPACE ('        ')
ITchar (''?'')
ITcolon (':')
ITvarid ('c')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isLower')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITconid ('ImplicitParams')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                        ')
ITvarid ('id')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
ITvarid ('isIdent')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('IDupVarId')
WHITE_SPACE (' ')
ITvarid ('id')
WHITE_SPACE ('\n\n        ')
ITchar (''%'')
ITcolon (':')
ITvarid ('c')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isLower')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITconid ('ImplicitParams')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                        ')
ITvarid ('id')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
ITvarid ('isIdent')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('ILinVarId')
WHITE_SPACE (' ')
ITvarid ('id')
WHITE_SPACE ('\n        ')
ITlineComment ('-- end implicit parameters\n')
WHITE_SPACE ('\n        ')
ITlineComment ('-- harp\n')
ITlineComment ('--        '(':'|':c:_  | isHSymbol c -> discard 1 >> return LeftParen\n')
WHITE_SPACE ('        ')
ITchar (''('')
ITcolon (':')
ITchar (''|'')
ITcolon (':')
ITvarid ('c')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('RegularPatterns')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITvarid ('not')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('isHSymbol')
WHITE_SPACE (' ')
ITvarid ('c')
ITcparen (')')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('\n                     ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('RPGuardOpen')
WHITE_SPACE ('\n        ')
ITchar (''|'')
ITcolon (':')
ITchar ('')'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('RegularPatterns')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('\n                     ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('RPGuardClose')
WHITE_SPACE ('\n        ')
ITblockComment ('{-')
ITblockComment (' This is handled by the reserved_ops above.\n        '@':':':_ | RegularPatterns `elem` exts ')
ITblockComment ('-')
ITblockComment ('>\n                     do discard 2\n                        return RPCAt ')
ITblockComment ('-}')
WHITE_SPACE ('\n\n        ')
ITlineComment ('-- template haskell\n')
WHITE_SPACE ('        ')
ITchar (''['')
ITcolon (':')
ITchar (''|'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('TemplateHaskell')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n                ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('THExpQuote')
WHITE_SPACE ('\n\n        ')
ITchar (''['')
ITcolon (':')
ITvarid ('c')
ITcolon (':')
ITchar (''|'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('==')
WHITE_SPACE (' ')
ITchar (''e'')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITconid ('TemplateHaskell')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('THExpQuote')
WHITE_SPACE ('\n                    ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('==')
WHITE_SPACE (' ')
ITchar (''p'')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITconid ('TemplateHaskell')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('THPatQuote')
WHITE_SPACE ('\n                    ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('==')
WHITE_SPACE (' ')
ITchar (''d'')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITconid ('TemplateHaskell')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('THDecQuote')
WHITE_SPACE ('\n                    ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('==')
WHITE_SPACE (' ')
ITchar (''t'')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITconid ('TemplateHaskell')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('THTypQuote')
WHITE_SPACE ('\n        ')
ITchar (''['')
ITcolon (':')
ITchar (''$'')
ITcolon (':')
ITvarid ('c')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isLower')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITconid ('QuasiQuotes')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('lexQuasiQuote')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE ('\n\n        ')
ITchar (''['')
ITcolon (':')
ITvarid ('c')
ITcolon (':')
ITvarid ('s'')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isLower')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITconid ('QuasiQuotes')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('dropWhile')
WHITE_SPACE (' ')
ITvarid ('isIdent')
WHITE_SPACE (' ')
ITvarid ('s'')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE (' ')
ITocurly ('{')
WHITE_SPACE (' ')
ITchar (''|'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('True')
ITsemi (';')
ITunderscore ('_')
ITrarrow ('->')
ITconid ('False')
ITccurly ('}')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('lexQuasiQuote')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE ('\n                 ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isUpper')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITconid ('QuasiQuotes')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('lexQuasiQuote')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE ('\n\n        ')
ITchar (''|'')
ITcolon (':')
ITchar ('']'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('TemplateHaskell')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('THCloseQuote')
WHITE_SPACE ('\n\n        ')
ITchar (''$'')
ITcolon (':')
ITvarid ('c')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isLower')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITconid ('TemplateHaskell')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                        ')
ITvarid ('id')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
ITvarid ('isIdent')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('THIdEscape')
WHITE_SPACE (' ')
ITvarid ('id')
WHITE_SPACE ('\n                ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('==')
WHITE_SPACE (' ')
ITchar (''('')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITconid ('TemplateHaskell')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('THParenEscape')
WHITE_SPACE ('\n        ')
ITlineComment ('-- end template haskell\n')
WHITE_SPACE ('\n        ')
ITlineComment ('-- hsx\n')
WHITE_SPACE ('        ')
ITchar (''<'')
ITcolon (':')
ITchar (''%'')
ITcolon (':')
ITvarid ('c')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('XmlSyntax')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('\n                        ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                         ')
ITchar (''>'')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE ('\n                                   ')
ITvarid ('pushExtContextL')
WHITE_SPACE (' ')
ITconid ('ChildCtxt')
WHITE_SPACE ('\n                                   ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('XChildTagOpen')
WHITE_SPACE ('\n                         ')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n                                   ')
ITvarid ('pushExtContextL')
WHITE_SPACE (' ')
ITconid ('CodeTagCtxt')
WHITE_SPACE ('\n                                   ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('XCodeTagOpen')
WHITE_SPACE ('\n        ')
ITchar (''<'')
ITcolon (':')
ITvarid ('c')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isAlpha')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITconid ('XmlSyntax')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                        ')
ITvarid ('pushExtContextL')
WHITE_SPACE (' ')
ITconid ('TagCtxt')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('XStdTagOpen')
WHITE_SPACE ('\n        ')
ITlineComment ('-- end hsx\n')
WHITE_SPACE ('\n        ')
ITchar (''('')
ITcolon (':')
ITchar (''#'')
ITcolon (':')
ITvarid ('c')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('UnboxedTuples')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITvarid ('not')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('isHSymbol')
WHITE_SPACE (' ')
ITvarid ('c')
ITcparen (')')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('LeftHashParen')
WHITE_SPACE ('\n\n        ')
ITchar (''#'')
ITcolon (':')
ITchar ('')'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('UnboxedTuples')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('RightHashParen')
WHITE_SPACE ('\n\n        ')
ITlineComment ('-- pragmas\n')
WHITE_SPACE ('\n        ')
ITchar (''{'')
ITcolon (':')
ITchar (''-'')
ITcolon (':')
ITchar (''#'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('saveExtensionsL')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('lexPragmaStart')
WHITE_SPACE ('\n\n        ')
ITchar (''#'')
ITcolon (':')
ITchar (''-'')
ITcolon (':')
ITchar (''}'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('restoreExtensionsL')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('PragmaEnd')
WHITE_SPACE ('\n\n        ')
ITlineComment ('-- Parallel arrays\n')
WHITE_SPACE ('\n        ')
ITchar (''['')
ITcolon (':')
ITchar ('':'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('ParallelArrays')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('ParArrayLeftSquare')
WHITE_SPACE ('\n\n        ')
ITchar ('':'')
ITcolon (':')
ITchar ('']'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('ParallelArrays')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('ParArrayRightSquare')
WHITE_SPACE ('\n\n        ')
ITvarid ('c')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isDigit')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('lexDecimalOrFloat')
WHITE_SPACE ('\n\n            ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isUpper')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('lexConIdOrQual')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('"')
WHITE_SPACE ('\n\n            ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isLower')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('||')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('==')
WHITE_SPACE (' ')
ITchar (''_'')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                    ')
ITvarid ('idents')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexIdents')
WHITE_SPACE ('\n                    ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('idents')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                     ')
ITobrack ('[')
ITvarid ('ident')
ITcbrack (']')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('lookup')
WHITE_SPACE (' ')
ITvarid ('ident')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('reserved_ids')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITvarid ('special_varids')
ITcparen (')')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                                 ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('keyword')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('scheme')
ITcparen (')')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('\n                                    ')
ITlineComment ('-- check if an extension keyword is enabled\n')
WHITE_SPACE ('                                    ')
ITif ('if')
WHITE_SPACE (' ')
ITvarid ('isEnabled')
WHITE_SPACE (' ')
ITvarid ('scheme')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE ('\n                                     ')
ITthen ('then')
WHITE_SPACE (' ')
ITvarid ('flagKW')
WHITE_SPACE (' ')
ITvarid ('keyword')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarid ('keyword')
WHITE_SPACE ('\n                                     ')
ITelse ('else')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('VarId')
WHITE_SPACE (' ')
ITvarid ('ident')
WHITE_SPACE ('\n                                 ')
ITconid ('Nothing')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('VarId')
WHITE_SPACE (' ')
ITvarid ('ident')
WHITE_SPACE ('\n                     ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('DVarId')
WHITE_SPACE (' ')
ITvarid ('idents')
WHITE_SPACE ('\n\n            ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isHSymbol')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                    ')
ITvarid ('sym')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
ITvarid ('isHSymbol')
WHITE_SPACE ('\n                    ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('lookup')
WHITE_SPACE (' ')
ITvarid ('sym')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('reserved_ops')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITvarid ('special_varops')
ITcparen (')')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                              ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('t')
WHITE_SPACE (' ')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('scheme')
ITcparen (')')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('\n                                ')
ITlineComment ('-- check if an extension op is enabled\n')
WHITE_SPACE ('                                ')
ITif ('if')
WHITE_SPACE (' ')
ITvarid ('isEnabled')
WHITE_SPACE (' ')
ITvarid ('scheme')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE ('\n                                 ')
ITthen ('then')
WHITE_SPACE (' ')
ITvarid ('t')
WHITE_SPACE ('\n                                 ')
ITelse ('else')
WHITE_SPACE (' ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                                        ')
ITchar ('':'')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('ConSym')
WHITE_SPACE (' ')
ITvarid ('sym')
WHITE_SPACE ('\n                                        ')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('VarSym')
WHITE_SPACE (' ')
ITvarid ('sym')
WHITE_SPACE ('\n                              ')
ITconid ('Nothing')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                                          ')
ITchar ('':'')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('ConSym')
WHITE_SPACE (' ')
ITvarid ('sym')
WHITE_SPACE ('\n                                          ')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('VarSym')
WHITE_SPACE (' ')
ITvarid ('sym')
WHITE_SPACE ('\n\n            ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('otherwise')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                    ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                    ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n\n                        ')
ITlineComment ('-- First the special symbols\n')
WHITE_SPACE ('                        ')
ITchar (''('')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('  ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('LeftParen')
WHITE_SPACE ('\n                        ')
ITchar ('')'')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('  ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('RightParen')
WHITE_SPACE ('\n                        ')
ITchar ('','')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('  ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('Comma')
WHITE_SPACE ('\n                        ')
ITchar ('';'')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('  ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('SemiColon')
WHITE_SPACE ('\n                        ')
ITchar (''['')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('  ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('LeftSquare')
WHITE_SPACE ('\n                        ')
ITchar ('']'')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('  ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('RightSquare')
WHITE_SPACE ('\n                        ')
ITchar (''`'')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('  ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('BackQuote')
WHITE_SPACE ('\n                        ')
ITchar (''{'')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                            ')
ITvarid ('pushContextL')
WHITE_SPACE (' ')
ITconid ('NoLayout')
WHITE_SPACE ('\n                            ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('LeftCurly')
WHITE_SPACE ('\n                        ')
ITchar (''}'')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                            ')
ITvarid ('popContextL')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('lexStdToken')
ITstring ('"')
WHITE_SPACE ('\n                            ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('RightCurly')
WHITE_SPACE ('\n\n                        ')
ITchar (''\''')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('lexCharacter')
WHITE_SPACE ('\n                        ')
ITchar (''"'')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('  ')
ITvarid ('lexString')
WHITE_SPACE ('\n\n                        ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('    ')
ITvarid ('fail')
WHITE_SPACE (' ')
IToparen ('(')
ITstring ('"')
ITstring ('Illegal character ')
BAD_CHARACTER ('\')
ITstring (''')
ITstring ('"')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITvarid ('show')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITstring ('"')
BAD_CHARACTER ('\')
ITstring (''')
ITstring ('\n')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n\n      ')
ITwhere ('where')
WHITE_SPACE (' ')
ITvarid ('lexIdents')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('String')
ITcbrack (']')
WHITE_SPACE ('\n            ')
ITvarid ('lexIdents')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                ')
ITvarid ('ident')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
ITvarid ('isIdent')
WHITE_SPACE ('\n                ')
ITvarid ('s')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n                ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getExtensionsL')
WHITE_SPACE ('\n                ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                 ')
ITlineComment ('-- This is the only way we can get more than one ident in the list\n')
WHITE_SPACE ('                 ')
ITlineComment ('-- and it requires XmlSyntax to be on.\n')
WHITE_SPACE ('                 ')
ITchar (''-'')
ITcolon (':')
ITvarid ('c')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('XmlSyntax')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITvarid ('isAlpha')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                        ')
ITvarid ('idents')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexIdents')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITvarid ('ident')
WHITE_SPACE (' ')
ITcolon (':')
WHITE_SPACE (' ')
ITvarid ('idents')
WHITE_SPACE ('\n                 ')
ITchar (''#'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('MagicHash')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITobrack ('[')
ITvarid ('ident')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('#')
ITstring ('"')
ITcbrack (']')
WHITE_SPACE ('\n                 ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITobrack ('[')
ITvarid ('ident')
ITcbrack (']')
WHITE_SPACE ('\n\n            ')
ITvarid ('lexQuasiQuote')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Char')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
ITconid ('Token')
WHITE_SPACE ('\n            ')
ITvarid ('lexQuasiQuote')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                ')
ITlineComment ('-- We've seen and dropped [$ already\n')
WHITE_SPACE ('                ')
ITvarid ('ident')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexQuoter')
WHITE_SPACE ('\n                ')
ITvarid ('matchChar')
WHITE_SPACE (' ')
ITchar (''|'')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('Malformed quasi-quote quoter')
ITstring ('"')
WHITE_SPACE ('\n                ')
ITvarid ('body')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexQQBody')
WHITE_SPACE ('\n                ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('THQuasiQuote')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('ident')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('body')
ITcparen (')')
WHITE_SPACE ('\n                  ')
ITwhere ('where')
WHITE_SPACE (' ')
ITvarid ('lexQuoter')
WHITE_SPACE ('\n                         ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isLower')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
ITvarid ('isIdent')
WHITE_SPACE ('\n                         ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('otherwise')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                            ')
ITvarid ('qualThing')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexConIdOrQual')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('"')
WHITE_SPACE ('\n                            ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('qualThing')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                                ')
ITconid ('QVarId')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('s1')
ITcomma (',')
ITvarid ('s2')
ITcparen (')')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITvarid ('s1')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITchar (''.'')
ITcolon (':')
ITvarid ('s2')
WHITE_SPACE ('\n                                ')
ITconid ('QVarSym')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('s1')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('s2')
ITcparen (')')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITvarid ('s1')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITchar (''.'')
ITcolon (':')
ITvarid ('s2')
WHITE_SPACE ('\n                                ')
ITunderscore ('_')
WHITE_SPACE ('                ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('fail')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('Malformed quasi-quote quoter')
ITstring ('"')
WHITE_SPACE ('\n\n            ')
ITvarid ('lexQQBody')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
ITconid ('String')
WHITE_SPACE ('\n            ')
ITvarid ('lexQQBody')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                ')
ITvarid ('s')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n                ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                  ')
ITchar (''\\'')
ITcolon (':')
ITchar ('']'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n                                   ')
ITvarid ('str')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexQQBody')
WHITE_SPACE ('\n                                   ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITchar ('']'')
ITcolon (':')
ITvarid ('str')
ITcparen (')')
WHITE_SPACE ('\n                  ')
ITchar (''\\'')
ITcolon (':')
ITchar (''|'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n                                   ')
ITvarid ('str')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexQQBody')
WHITE_SPACE ('\n                                   ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITchar (''|'')
ITcolon (':')
ITvarid ('str')
ITcparen (')')
WHITE_SPACE ('\n                  ')
ITchar (''|'')
ITcolon (':')
ITchar ('']'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('  ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('"')
WHITE_SPACE ('\n                  ')
ITchar (''|'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                              ')
ITvarid ('str')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexQQBody')
WHITE_SPACE ('\n                              ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITchar (''|'')
ITcolon (':')
ITvarid ('str')
ITcparen (')')
WHITE_SPACE ('\n                  ')
ITchar ('']'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                              ')
ITvarid ('str')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexQQBody')
WHITE_SPACE ('\n                              ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITchar ('']'')
ITcolon (':')
ITvarid ('str')
ITcparen (')')
WHITE_SPACE ('\n                  ')
ITchar (''\\'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                               ')
ITvarid ('str')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexQQBody')
WHITE_SPACE ('\n                               ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITchar (''\\'')
ITcolon (':')
ITvarid ('str')
ITcparen (')')
WHITE_SPACE ('\n                  ')
ITchar (''\n'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('lexNewline')
WHITE_SPACE ('\n                               ')
ITvarid ('str')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexQQBody')
WHITE_SPACE ('\n                               ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITchar (''\n'')
ITcolon (':')
ITvarid ('str')
ITcparen (')')
WHITE_SPACE ('\n                  ')
ITobrack ('[')
ITcbrack (']')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('fail')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('Unexpected end of input while lexing quasi-quoter')
ITstring ('"')
WHITE_SPACE ('\n                  ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITvarid ('str')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('not')
WHITE_SPACE (' ')
ITvarsym ('.')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('\\')
ITstring ('|')
ITstring ('\n')
ITstring ('"')
ITcparen (')')
ITcparen (')')
WHITE_SPACE ('\n                          ')
ITvarid ('rest')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexQQBody')
WHITE_SPACE ('\n                          ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('str')
ITvarsym ('++')
ITvarid ('rest')
ITcparen (')')
WHITE_SPACE ('\n\n')
ITlineComment ('-- Underscores are used in some pragmas. Options pragmas are a special case\n')
ITlineComment ('-- with our representation: the thing after the underscore is a parameter.\n')
ITlineComment ('-- Strip off the parameters to option pragmas by hand here, everything else\n')
ITlineComment ('-- sits in the pragmas map.\n')
ITvarid ('lookupKnownPragma')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('String')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Maybe')
WHITE_SPACE (' ')
ITconid ('Token')
WHITE_SPACE ('\n')
ITvarid ('lookupKnownPragma')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE ('\n    ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('map')
WHITE_SPACE (' ')
ITvarid ('toLower')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n      ')
ITvarid ('x')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('options_')
ITstring ('"')
WHITE_SPACE (' ')
ITvarid ('`isPrefixOf`')
WHITE_SPACE (' ')
ITvarid ('x')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Just')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('OPTIONS')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Just')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITvarid ('drop')
WHITE_SPACE (' ')
ITinteger ('8')
WHITE_SPACE (' ')
ITvarid ('s')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('undefined')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('options')
ITstring ('"')
WHITE_SPACE (' ')
ITvarsym ('==')
WHITE_SPACE (' ')
ITvarid ('x')
WHITE_SPACE ('            ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Just')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('OPTIONS')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Nothing')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('undefined')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('otherwise')
WHITE_SPACE ('                 ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('lookup')
WHITE_SPACE (' ')
ITvarid ('x')
WHITE_SPACE (' ')
ITvarid ('pragmas')
WHITE_SPACE ('\n\n')
ITvarid ('lexPragmaStart')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
ITconid ('Token')
WHITE_SPACE ('\n')
ITvarid ('lexPragmaStart')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITvarid ('lexWhile_')
WHITE_SPACE (' ')
ITvarid ('isSpace')
WHITE_SPACE ('\n    ')
ITvarid ('pr')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
ITvarid ('isPragmaChar')
WHITE_SPACE ('\n    ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('lookupKnownPragma')
WHITE_SPACE (' ')
ITvarid ('pr')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n     ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('INLINE')
WHITE_SPACE (' ')
ITconid ('True')
ITcparen (')')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n            ')
ITvarid ('s')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n            ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('map')
WHITE_SPACE (' ')
ITvarid ('toLower')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n             ')
ITchar ('' '')
ITcolon (':')
ITchar (''c'')
ITcolon (':')
ITchar (''o'')
ITcolon (':')
ITchar (''n'')
ITcolon (':')
ITchar (''l'')
ITcolon (':')
ITchar (''i'')
ITcolon (':')
ITchar (''k'')
ITcolon (':')
ITchar (''e'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('  ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                      ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('8')
WHITE_SPACE ('\n                      ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('INLINE_CONLIKE')
WHITE_SPACE ('\n             ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('INLINE')
WHITE_SPACE (' ')
ITconid ('True')
WHITE_SPACE ('\n     ')
ITconid ('Just')
WHITE_SPACE (' ')
ITconid ('SPECIALISE')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n            ')
ITvarid ('s')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n            ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('dropWhile')
WHITE_SPACE (' ')
ITvarid ('isSpace')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITvarid ('map')
WHITE_SPACE (' ')
ITvarid ('toLower')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n             ')
ITchar (''i'')
ITcolon (':')
ITchar (''n'')
ITcolon (':')
ITchar (''l'')
ITcolon (':')
ITchar (''i'')
ITcolon (':')
ITchar (''n'')
ITcolon (':')
ITchar (''e'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                      ')
ITvarid ('lexWhile_')
WHITE_SPACE (' ')
ITvarid ('isSpace')
WHITE_SPACE ('\n                      ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('6')
WHITE_SPACE ('\n                      ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('SPECIALISE_INLINE')
WHITE_SPACE (' ')
ITconid ('True')
WHITE_SPACE ('\n             ')
ITchar (''n'')
ITcolon (':')
ITchar (''o'')
ITcolon (':')
ITchar (''i'')
ITcolon (':')
ITchar (''n'')
ITcolon (':')
ITchar (''l'')
ITcolon (':')
ITchar (''i'')
ITcolon (':')
ITchar (''n'')
ITcolon (':')
ITchar (''e'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                        ')
ITvarid ('lexWhile_')
WHITE_SPACE (' ')
ITvarid ('isSpace')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('8')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('SPECIALISE_INLINE')
WHITE_SPACE (' ')
ITconid ('False')
WHITE_SPACE ('\n             ')
ITchar (''n'')
ITcolon (':')
ITchar (''o'')
ITcolon (':')
ITchar (''t'')
ITcolon (':')
ITchar (''i'')
ITcolon (':')
ITchar (''n'')
ITcolon (':')
ITchar (''l'')
ITcolon (':')
ITchar (''i'')
ITcolon (':')
ITchar (''n'')
ITcolon (':')
ITchar (''e'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                        ')
ITvarid ('lexWhile_')
WHITE_SPACE (' ')
ITvarid ('isSpace')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('9')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('SPECIALISE_INLINE')
WHITE_SPACE (' ')
ITconid ('False')
WHITE_SPACE ('\n             ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('SPECIALISE')
WHITE_SPACE ('\n\n     ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('OPTIONS')
WHITE_SPACE (' ')
ITvarid ('opt')
ITcparen (')')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('     ')
ITlineComment ('-- see, I promised we'd mask out the 'undefined'\n')
WHITE_SPACE ('            ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('fst')
WHITE_SPACE (' ')
ITvarid ('opt')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n             ')
ITconid ('Just')
WHITE_SPACE (' ')
ITvarid ('opt'')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                ')
ITvarid ('rest')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexRawPragma')
WHITE_SPACE ('\n                ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('OPTIONS')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Just')
WHITE_SPACE (' ')
ITvarid ('opt'')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('rest')
ITcparen (')')
WHITE_SPACE ('\n             ')
ITconid ('Nothing')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                            ')
ITvarid ('s')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n                            ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                                ')
ITvarid ('x')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isSpace')
WHITE_SPACE (' ')
ITvarid ('x')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                                    ')
ITvarid ('rest')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexRawPragma')
WHITE_SPACE ('\n                                    ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('OPTIONS')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Nothing')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('rest')
ITcparen (')')
WHITE_SPACE ('\n                                ')
ITunderscore ('_')
WHITE_SPACE ('  ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('fail')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('Malformed Options pragma')
ITstring ('"')
WHITE_SPACE ('\n     ')
ITconid ('Just')
WHITE_SPACE (' ')
ITconid ('RULES')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE (' ')
ITlineComment ('-- Rules enable ScopedTypeVariables locally.\n')
WHITE_SPACE ('            ')
ITvarid ('addExtensionL')
WHITE_SPACE (' ')
ITconid ('ScopedTypeVariables')
WHITE_SPACE ('\n            ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('RULES')
WHITE_SPACE ('\n')
ITblockComment ('{-')
ITblockComment ('     Just (CFILES _) ')
ITblockComment ('-')
ITblockComment ('> do\n            rest <')
ITblockComment ('-')
ITblockComment (' lexRawPragma\n            return $ CFILES rest\n     Just (INCLUDE _) ')
ITblockComment ('-')
ITblockComment ('> do\n            rest <')
ITblockComment ('-')
ITblockComment (' lexRawPragma\n            return $ INCLUDE rest ')
ITblockComment ('-}')
WHITE_SPACE ('\n     ')
ITconid ('Just')
WHITE_SPACE (' ')
ITvarid ('p')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('  ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarid ('p')
WHITE_SPACE ('\n\n     ')
ITunderscore ('_')
WHITE_SPACE ('      ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('fail')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('Internal error: Unrecognised recognised pragma')
ITstring ('"')
WHITE_SPACE ('\n                  ')
ITlineComment ('-- do rawStr <- lexRawPragma\n')
WHITE_SPACE ('                  ')
ITlineComment ('-- return $ PragmaUnknown (pr, rawStr) -- no support for unrecognized pragmas, treat as comment\n')
WHITE_SPACE ('                  ')
ITlineComment ('-- discard 3 -- #-}\n')
WHITE_SPACE ('                  ')
ITlineComment ('-- topLexer -- we just discard it as a comment for now and restart -}\n')
WHITE_SPACE ('\n')
ITvarid ('lexRawPragma')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
ITconid ('String')
WHITE_SPACE ('\n')
ITvarid ('lexRawPragma')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('lexRawPragmaAux')
WHITE_SPACE ('\n ')
ITwhere ('where')
WHITE_SPACE (' ')
ITvarid ('lexRawPragmaAux')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n        ')
ITvarid ('rpr')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
IToparen ('(')
ITvarsym ('/=')
ITchar (''#'')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITvarid ('s')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n        ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n         ')
ITchar (''#'')
ITcolon (':')
ITchar (''-'')
ITcolon (':')
ITchar (''}'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('  ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarid ('rpr')
WHITE_SPACE ('\n         ')
ITstring ('"')
ITstring ('"')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('fail')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('End-of-file inside pragma')
ITstring ('"')
WHITE_SPACE ('\n         ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n            ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n            ')
ITvarid ('rpr'')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexRawPragma')
WHITE_SPACE ('\n            ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITvarid ('rpr')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITchar (''#'')
ITcolon (':')
ITvarid ('rpr'')
WHITE_SPACE ('\n\n')
ITvarid ('lexDecimalOrFloat')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
ITconid ('Token')
WHITE_SPACE ('\n')
ITvarid ('lexDecimalOrFloat')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITvarid ('ds')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
ITvarid ('isDigit')
WHITE_SPACE ('\n    ')
ITvarid ('rest')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n    ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getExtensionsL')
WHITE_SPACE ('\n    ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('rest')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n        ')
IToparen ('(')
ITchar (''.'')
ITcolon (':')
ITvarid ('d')
ITcolon (':')
ITunderscore ('_')
ITcparen (')')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isDigit')
WHITE_SPACE (' ')
ITvarid ('d')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                ')
ITvarid ('frac')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
ITvarid ('isDigit')
WHITE_SPACE ('\n                ')
ITlet ('let')
WHITE_SPACE (' ')
ITvarid ('num')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('parseInteger')
WHITE_SPACE (' ')
ITinteger ('10')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('ds')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITvarid ('frac')
ITcparen (')')
WHITE_SPACE ('\n                    ')
ITvarid ('decimals')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('toInteger')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('length')
WHITE_SPACE (' ')
ITvarid ('frac')
ITcparen (')')
WHITE_SPACE ('\n                ')
IToparen ('(')
ITvarid ('exponent')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('estr')
ITcparen (')')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                    ')
ITvarid ('rest2')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n                    ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('rest2')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                        ')
ITchar (''e'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('lexExponent')
WHITE_SPACE ('\n                        ')
ITchar (''E'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('lexExponent')
WHITE_SPACE ('\n                        ')
ITunderscore ('_')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITinteger ('0')
ITcomma (',')
ITstring ('"')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n                ')
ITvarid ('con')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexHash')
WHITE_SPACE (' ')
ITconid ('FloatTok')
WHITE_SPACE (' ')
ITconid ('FloatTokHash')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Right')
WHITE_SPACE (' ')
ITconid ('DoubleTokHash')
ITcparen (')')
WHITE_SPACE ('\n                ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITvarid ('con')
WHITE_SPACE (' ')
IToparen ('(')
IToparen ('(')
ITvarid ('num')
ITvarsym ('%')
ITinteger ('1')
ITcparen (')')
WHITE_SPACE (' ')
ITvarsym ('*')
WHITE_SPACE (' ')
ITinteger ('10')
ITvarsym ('^^')
IToparen ('(')
ITvarid ('exponent')
WHITE_SPACE (' ')
ITvarsym ('-')
WHITE_SPACE (' ')
ITvarid ('decimals')
ITcparen (')')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('ds')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITchar (''.'')
ITcolon (':')
ITvarid ('frac')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITvarid ('estr')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITvarid ('e')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('toLower')
WHITE_SPACE (' ')
ITvarid ('e')
WHITE_SPACE (' ')
ITvarsym ('==')
WHITE_SPACE (' ')
ITchar (''e'')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                ')
IToparen ('(')
ITvarid ('exponent')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('estr')
ITcparen (')')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexExponent')
WHITE_SPACE ('\n                ')
ITvarid ('con')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexHash')
WHITE_SPACE (' ')
ITconid ('FloatTok')
WHITE_SPACE (' ')
ITconid ('FloatTokHash')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Right')
WHITE_SPACE (' ')
ITconid ('DoubleTokHash')
ITcparen (')')
WHITE_SPACE ('\n                ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITvarid ('con')
WHITE_SPACE (' ')
IToparen ('(')
IToparen ('(')
ITvarid ('parseInteger')
WHITE_SPACE (' ')
ITinteger ('10')
WHITE_SPACE (' ')
ITvarid ('ds')
ITvarsym ('%')
ITinteger ('1')
ITcparen (')')
WHITE_SPACE (' ')
ITvarsym ('*')
WHITE_SPACE (' ')
ITinteger ('10')
ITvarsym ('^^')
ITvarid ('exponent')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('ds')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITvarid ('estr')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''#'')
ITcolon (':')
ITchar (''#'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('MagicHash')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('WordTokHash')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('parseInteger')
WHITE_SPACE (' ')
ITinteger ('10')
WHITE_SPACE (' ')
ITvarid ('ds')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('ds')
ITcparen (')')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''#'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('     ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('MagicHash')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('IntTokHash')
WHITE_SPACE ('  ')
IToparen ('(')
ITvarid ('parseInteger')
WHITE_SPACE (' ')
ITinteger ('10')
WHITE_SPACE (' ')
ITvarid ('ds')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('ds')
ITcparen (')')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITunderscore ('_')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE ('              ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('IntTok')
WHITE_SPACE ('      ')
IToparen ('(')
ITvarid ('parseInteger')
WHITE_SPACE (' ')
ITinteger ('10')
WHITE_SPACE (' ')
ITvarid ('ds')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('ds')
ITcparen (')')
ITcparen (')')
WHITE_SPACE ('\n\n    ')
ITwhere ('where')
WHITE_SPACE ('\n    ')
ITvarid ('lexExponent')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Integer')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('\n    ')
ITvarid ('lexExponent')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n        ')
IToparen ('(')
ITvarid ('e')
ITcolon (':')
ITvarid ('r')
ITcparen (')')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('   ')
ITlineComment ('-- 'e' or 'E'\n')
WHITE_SPACE ('        ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('r')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n         ')
ITchar (''+'')
ITcolon (':')
ITvarid ('d')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isDigit')
WHITE_SPACE (' ')
ITvarid ('d')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n            ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n            ')
IToparen ('(')
ITvarid ('n')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('str')
ITcparen (')')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexDecimal')
WHITE_SPACE ('\n            ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('n')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('e')
ITcolon (':')
ITchar (''+'')
ITcolon (':')
ITvarid ('str')
ITcparen (')')
WHITE_SPACE ('\n         ')
ITchar (''-'')
ITcolon (':')
ITvarid ('d')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isDigit')
WHITE_SPACE (' ')
ITvarid ('d')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n            ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n            ')
IToparen ('(')
ITvarid ('n')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('str')
ITcparen (')')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexDecimal')
WHITE_SPACE ('\n            ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('negate')
WHITE_SPACE (' ')
ITvarid ('n')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('e')
ITcolon (':')
ITchar (''-'')
ITcolon (':')
ITvarid ('str')
ITcparen (')')
WHITE_SPACE ('\n         ')
ITvarid ('d')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isDigit')
WHITE_SPACE (' ')
ITvarid ('d')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('lexDecimal')
WHITE_SPACE (' ')
ITvarsym ('>>=')
WHITE_SPACE (' ')
ITvarsym ('\')
IToparen ('(')
ITvarid ('n')
ITcomma (',')
ITvarid ('str')
ITcparen (')')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('n')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('e')
ITcolon (':')
ITvarid ('str')
ITcparen (')')
WHITE_SPACE ('\n         ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('fail')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('Float with missing exponent')
ITstring ('"')
WHITE_SPACE ('\n\n')
ITvarid ('lexHash')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('b')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Token')
ITcparen (')')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('b')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Token')
ITcparen (')')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Either')
WHITE_SPACE (' ')
ITconid ('String')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('b')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Token')
ITcparen (')')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('b')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Token')
ITcparen (')')
WHITE_SPACE ('\n')
ITvarid ('lexHash')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
ITvarid ('b')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getExtensionsL')
WHITE_SPACE ('\n    ')
ITif ('if')
WHITE_SPACE (' ')
ITconid ('MagicHash')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE ('\n     ')
ITthen ('then')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n        ')
ITvarid ('r')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n        ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('r')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n         ')
ITchar (''#'')
ITcolon (':')
ITchar (''#'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                       ')
ITconid ('Right')
WHITE_SPACE (' ')
ITvarid ('c'')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarid ('c'')
WHITE_SPACE ('\n                       ')
ITconid ('Left')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE ('  ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('fail')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE ('\n         ')
ITchar (''#'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarid ('b')
WHITE_SPACE ('\n         ')
ITunderscore ('_')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE ('              ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE ('\n     ')
ITelse ('else')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE ('\n\n')
ITvarid ('lexConIdOrQual')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('String')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
ITconid ('Token')
WHITE_SPACE ('\n')
ITvarid ('lexConIdOrQual')
WHITE_SPACE (' ')
ITvarid ('qual')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n        ')
ITvarid ('con')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
ITvarid ('isIdent')
WHITE_SPACE ('\n        ')
ITlet ('let')
WHITE_SPACE (' ')
ITvarid ('conid')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('null')
WHITE_SPACE (' ')
ITvarid ('qual')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITconid ('ConId')
WHITE_SPACE (' ')
ITvarid ('con')
WHITE_SPACE ('\n                  ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('otherwise')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITconid ('QConId')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('qual')
ITcomma (',')
ITvarid ('con')
ITcparen (')')
WHITE_SPACE ('\n            ')
ITvarid ('qual'')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('null')
WHITE_SPACE (' ')
ITvarid ('qual')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('con')
WHITE_SPACE ('\n                  ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('otherwise')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('qual')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITchar (''.'')
ITcolon (':')
ITvarid ('con')
WHITE_SPACE ('\n        ')
ITvarid ('just_a_conid')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('alternative')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarid ('conid')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITvarid ('rest')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n        ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getExtensionsL')
WHITE_SPACE ('\n        ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('rest')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n          ')
ITchar (''.'')
ITcolon (':')
ITvarid ('c')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('\n             ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isLower')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('||')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('==')
WHITE_SPACE (' ')
ITchar (''_'')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('  ')
ITlineComment ('-- qualified varid?\n')
WHITE_SPACE ('                    ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                    ')
ITvarid ('ident')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
ITvarid ('isIdent')
WHITE_SPACE ('\n                    ')
ITvarid ('s')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n                    ')
ITvarid ('exts'')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getExtensionsL')
WHITE_SPACE ('\n                    ')
ITvarid ('ident'')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                               ')
ITchar (''#'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('MagicHash')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts'')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('ident')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('#')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n                               ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarid ('ident')
WHITE_SPACE ('\n                    ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('lookup')
WHITE_SPACE (' ')
ITvarid ('ident'')
WHITE_SPACE (' ')
ITvarid ('reserved_ids')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                       ')
ITlineComment ('-- cannot qualify a reserved word\n')
WHITE_SPACE ('                       ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITunderscore ('_')
ITcomma (',')
ITvarid ('scheme')
ITcparen (')')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isEnabled')
WHITE_SPACE (' ')
ITvarid ('scheme')
WHITE_SPACE (' ')
ITvarid ('exts'')
WHITE_SPACE ('  ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('just_a_conid')
WHITE_SPACE ('\n                       ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('QVarId')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('qual'')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('ident'')
ITcparen (')')
ITcparen (')')
WHITE_SPACE ('\n\n             ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isUpper')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('      ')
ITlineComment ('-- qualified conid?\n')
WHITE_SPACE ('                    ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                    ')
ITvarid ('lexConIdOrQual')
WHITE_SPACE (' ')
ITvarid ('qual'')
WHITE_SPACE ('\n\n             ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isHSymbol')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('    ')
ITlineComment ('-- qualified symbol?\n')
WHITE_SPACE ('                    ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                    ')
ITvarid ('sym')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
ITvarid ('isHSymbol')
WHITE_SPACE ('\n                    ')
ITvarid ('exts'')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getExtensionsL')
WHITE_SPACE ('\n                    ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('lookup')
WHITE_SPACE (' ')
ITvarid ('sym')
WHITE_SPACE (' ')
ITvarid ('reserved_ops')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                        ')
ITlineComment ('-- cannot qualify a reserved operator\n')
WHITE_SPACE ('                        ')
ITconid ('Just')
WHITE_SPACE (' ')
IToparen ('(')
ITunderscore ('_')
ITcomma (',')
ITvarid ('scheme')
ITcparen (')')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isEnabled')
WHITE_SPACE (' ')
ITvarid ('scheme')
WHITE_SPACE (' ')
ITvarid ('exts'')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('just_a_conid')
WHITE_SPACE ('\n                        ')
ITunderscore ('_')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                                              ')
ITchar ('':'')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('QConSym')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('qual'')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('sym')
ITcparen (')')
WHITE_SPACE ('\n                                              ')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('QVarSym')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('qual'')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('sym')
ITcparen (')')
WHITE_SPACE ('\n\n          ')
ITchar (''#'')
ITcolon (':')
ITvarid ('cs')
WHITE_SPACE ('\n            ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('null')
WHITE_SPACE (' ')
ITvarid ('cs')
WHITE_SPACE (' ')
ITvarsym ('||')
WHITE_SPACE ('\n              ')
ITvarid ('not')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('isHSymbol')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITvarid ('head')
WHITE_SPACE (' ')
ITvarid ('cs')
ITcparen (')')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE ('\n              ')
ITvarid ('not')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('isIdent')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITvarid ('head')
WHITE_SPACE (' ')
ITvarid ('cs')
ITcparen (')')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITconid ('MagicHash')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('conid')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n                 ')
ITconid ('ConId')
WHITE_SPACE (' ')
ITvarid ('con'')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('ConId')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITvarid ('con'')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('#')
ITstring ('"')
WHITE_SPACE ('\n                 ')
ITconid ('QConId')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('q')
ITcomma (',')
ITvarid ('con'')
ITcparen (')')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITconid ('QConId')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('q')
ITcomma (',')
ITvarid ('con'')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('#')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n                 ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('fail')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('lexConIdOrQual: unexpected token: ')
ITstring ('"')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITvarid ('show')
WHITE_SPACE (' ')
ITvarid ('conid')
WHITE_SPACE ('\n          ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('  ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarid ('conid')
WHITE_SPACE (' ')
ITlineComment ('-- not a qualified thing\n')
WHITE_SPACE ('\n')
ITvarid ('lexCharacter')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
ITconid ('Token')
WHITE_SPACE ('\n')
ITvarid ('lexCharacter')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('   ')
ITlineComment ('-- We need to keep track of not only character constants but also TH 'x and ''T\n')
WHITE_SPACE ('        ')
ITlineComment ('-- We've seen ' so far\n')
WHITE_SPACE ('        ')
ITvarid ('s')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n        ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getExtensionsL')
WHITE_SPACE ('\n        ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n         ')
ITchar (''\''')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('TemplateHaskell')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('THTyQuote')
WHITE_SPACE ('\n         ')
ITchar (''\\'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                    ')
IToparen ('(')
ITvarid ('c')
ITcomma (',')
ITvarid ('raw')
ITcparen (')')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexEscape')
WHITE_SPACE ('\n                    ')
ITvarid ('matchQuote')
WHITE_SPACE ('\n                    ')
ITvarid ('con')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexHash')
WHITE_SPACE (' ')
ITconid ('Character')
WHITE_SPACE (' ')
ITconid ('CharacterHash')
WHITE_SPACE ('\n                            ')
IToparen ('(')
ITconid ('Left')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('Double hash not available for character literals')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n                    ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('con')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('c')
ITcomma (',')
WHITE_SPACE (' ')
ITchar (''\\'')
ITcolon (':')
ITvarid ('raw')
ITcparen (')')
ITcparen (')')
WHITE_SPACE ('\n         ')
ITvarid ('c')
ITcolon (':')
ITchar (''\''')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                    ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n                    ')
ITvarid ('con')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexHash')
WHITE_SPACE (' ')
ITconid ('Character')
WHITE_SPACE (' ')
ITconid ('CharacterHash')
WHITE_SPACE ('\n                            ')
IToparen ('(')
ITconid ('Left')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('Double hash not available for character literals')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n                    ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('con')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('c')
ITcomma (',')
WHITE_SPACE (' ')
ITobrack ('[')
ITvarid ('c')
ITcbrack (']')
ITcparen (')')
ITcparen (')')
WHITE_SPACE ('\n         ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('any')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
ITcparen (')')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('TemplateHaskell')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('DataKinds')
ITcbrack (']')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITconid ('THVarQuote')
WHITE_SPACE ('\n         ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('fail')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('Improper character constant or misplaced ')
BAD_CHARACTER ('\')
ITstring (''')
ITstring ('"')
WHITE_SPACE ('\n\n    ')
ITwhere ('where')
WHITE_SPACE (' ')
ITvarid ('matchQuote')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('matchChar')
WHITE_SPACE (' ')
ITchar (''\''')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('Improperly terminated character constant')
ITstring ('"')
WHITE_SPACE ('\n\n\n')
ITvarid ('lexString')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
ITconid ('Token')
WHITE_SPACE ('\n')
ITvarid ('lexString')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('loop')
WHITE_SPACE (' ')
IToparen ('(')
ITstring ('"')
ITstring ('"')
ITcomma (',')
ITstring ('"')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n    ')
ITwhere ('where')
WHITE_SPACE ('\n    ')
ITvarid ('loop')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('s')
ITcomma (',')
ITvarid ('raw')
ITcparen (')')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n        ')
ITvarid ('r')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n        ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getExtensionsL')
WHITE_SPACE ('\n        ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('r')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n            ')
ITchar (''\\'')
ITcolon (':')
ITchar (''&'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                    ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n                    ')
ITvarid ('loop')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('s')
ITcomma (',')
WHITE_SPACE (' ')
ITchar (''&'')
ITcolon (':')
ITchar (''\\'')
ITcolon (':')
ITvarid ('raw')
ITcparen (')')
WHITE_SPACE ('\n            ')
ITchar (''\\'')
ITcolon (':')
ITvarid ('c')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isSpace')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                        ')
ITvarid ('wcs')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhiteChars')
WHITE_SPACE ('\n                        ')
ITvarid ('matchChar')
WHITE_SPACE (' ')
ITchar (''\\'')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('Illegal character in string gap')
ITstring ('"')
WHITE_SPACE ('\n                        ')
ITvarid ('loop')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('s')
ITcomma (',')
WHITE_SPACE (' ')
ITchar (''\\'')
ITcolon (':')
ITvarid ('reverse')
WHITE_SPACE (' ')
ITvarid ('wcs')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITchar (''\\'')
ITcolon (':')
ITvarid ('raw')
ITcparen (')')
WHITE_SPACE ('\n                     ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('otherwise')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                        ')
IToparen ('(')
ITvarid ('ce')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('str')
ITcparen (')')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexEscape')
WHITE_SPACE ('\n                        ')
ITvarid ('loop')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('ce')
ITcolon (':')
ITvarid ('s')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('reverse')
WHITE_SPACE (' ')
ITvarid ('str')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITchar (''\\'')
ITcolon (':')
ITvarid ('raw')
ITcparen (')')
WHITE_SPACE ('\n            ')
ITchar (''"'')
ITcolon (':')
ITchar (''#'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITconid ('MagicHash')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                        ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE ('\n                        ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('StringHash')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('reverse')
WHITE_SPACE (' ')
ITvarid ('s')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('reverse')
WHITE_SPACE (' ')
ITvarid ('raw')
ITcparen (')')
ITcparen (')')
WHITE_SPACE ('\n            ')
ITchar (''"'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('StringTok')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('reverse')
WHITE_SPACE (' ')
ITvarid ('s')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('reverse')
WHITE_SPACE (' ')
ITvarid ('raw')
ITcparen (')')
ITcparen (')')
WHITE_SPACE ('\n            ')
ITvarid ('c')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('/=')
WHITE_SPACE (' ')
ITchar (''\n'')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                ')
ITvarid ('loop')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('c')
ITcolon (':')
ITvarid ('s')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('c')
ITcolon (':')
ITvarid ('raw')
ITcparen (')')
WHITE_SPACE ('\n            ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE ('   ')
ITvarid ('fail')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('Improperly terminated string')
ITstring ('"')
WHITE_SPACE ('\n\n    ')
ITvarid ('lexWhiteChars')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
ITconid ('String')
WHITE_SPACE ('\n    ')
ITvarid ('lexWhiteChars')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n        ')
ITvarid ('s')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n        ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n            ')
ITchar (''\n'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                    ')
ITvarid ('lexNewline')
WHITE_SPACE ('\n                    ')
ITvarid ('wcs')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhiteChars')
WHITE_SPACE ('\n                    ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITchar (''\n'')
ITcolon (':')
ITvarid ('wcs')
WHITE_SPACE ('\n            ')
ITchar (''\t'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                    ')
ITvarid ('lexTab')
WHITE_SPACE ('\n                    ')
ITvarid ('wcs')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhiteChars')
WHITE_SPACE ('\n                    ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITchar (''\t'')
ITcolon (':')
ITvarid ('wcs')
WHITE_SPACE ('\n            ')
ITvarid ('c')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isSpace')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                    ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                    ')
ITvarid ('wcs')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhiteChars')
WHITE_SPACE ('\n                    ')
ITvarid ('return')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITvarid ('c')
ITcolon (':')
ITvarid ('wcs')
WHITE_SPACE ('\n            ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('"')
WHITE_SPACE ('\n\n')
ITvarid ('lexEscape')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Char')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('\n')
ITvarid ('lexEscape')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n    ')
ITvarid ('r')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getInput')
WHITE_SPACE ('\n    ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('r')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n\n')
ITlineComment ('-- Production charesc from section B.2 (Note: \& is handled by caller)\n')
WHITE_SPACE ('\n        ')
ITchar (''a'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('           ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITchar (''\a'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('a')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''b'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('           ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITchar (''\b'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('b')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''f'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('           ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITchar (''\f'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('f')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''n'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('           ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITchar (''\n'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('n')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''r'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('           ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITchar (''\r'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('r')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''t'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('           ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITchar (''\t'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('t')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''v'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('           ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITchar (''\v'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('v')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''\\'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('          ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITchar (''\\'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('\\')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''"'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('           ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITchar (''\"'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('\"')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''\''')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('          ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITchar (''\''')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
BAD_CHARACTER ('\')
ITstring (''')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n\n')
ITlineComment ('-- Production ascii from section B.2\n')
WHITE_SPACE ('\n        ')
ITchar (''^'')
ITcolon (':')
ITvarid ('c')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('cntrl')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE ('\n        ')
ITchar (''N'')
ITcolon (':')
ITchar (''U'')
ITcolon (':')
ITchar (''L'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('NUL'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('NUL')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''S'')
ITcolon (':')
ITchar (''O'')
ITcolon (':')
ITchar (''H'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('SOH'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('SOH')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''S'')
ITcolon (':')
ITchar (''T'')
ITcolon (':')
ITchar (''X'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('STX'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('STX')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''E'')
ITcolon (':')
ITchar (''T'')
ITcolon (':')
ITchar (''X'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('ETX'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('ETX')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''E'')
ITcolon (':')
ITchar (''O'')
ITcolon (':')
ITchar (''T'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('EOT'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('EOT')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''E'')
ITcolon (':')
ITchar (''N'')
ITcolon (':')
ITchar (''Q'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('ENQ'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('ENQ')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''A'')
ITcolon (':')
ITchar (''C'')
ITcolon (':')
ITchar (''K'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('ACK'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('ACK')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''B'')
ITcolon (':')
ITchar (''E'')
ITcolon (':')
ITchar (''L'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('BEL'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('BEL')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''B'')
ITcolon (':')
ITchar (''S'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('BS'')
ITcomma (',')
WHITE_SPACE ('  ')
ITstring ('"')
ITstring ('BS')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''H'')
ITcolon (':')
ITchar (''T'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('HT'')
ITcomma (',')
WHITE_SPACE ('  ')
ITstring ('"')
ITstring ('HT')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''L'')
ITcolon (':')
ITchar (''F'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('LF'')
ITcomma (',')
WHITE_SPACE ('  ')
ITstring ('"')
ITstring ('LF')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''V'')
ITcolon (':')
ITchar (''T'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('VT'')
ITcomma (',')
WHITE_SPACE ('  ')
ITstring ('"')
ITstring ('VT')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''F'')
ITcolon (':')
ITchar (''F'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('FF'')
ITcomma (',')
WHITE_SPACE ('  ')
ITstring ('"')
ITstring ('FF')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''C'')
ITcolon (':')
ITchar (''R'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('CR'')
ITcomma (',')
WHITE_SPACE ('  ')
ITstring ('"')
ITstring ('CR')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''S'')
ITcolon (':')
ITchar (''O'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('SO'')
ITcomma (',')
WHITE_SPACE ('  ')
ITstring ('"')
ITstring ('SO')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''S'')
ITcolon (':')
ITchar (''I'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('SI'')
ITcomma (',')
WHITE_SPACE ('  ')
ITstring ('"')
ITstring ('SI')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''D'')
ITcolon (':')
ITchar (''L'')
ITcolon (':')
ITchar (''E'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('DLE'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('DLE')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''D'')
ITcolon (':')
ITchar (''C'')
ITcolon (':')
ITchar (''1'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('DC1'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('DC1')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''D'')
ITcolon (':')
ITchar (''C'')
ITcolon (':')
ITchar (''2'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('DC2'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('DC2')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''D'')
ITcolon (':')
ITchar (''C'')
ITcolon (':')
ITchar (''3'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('DC3'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('DC3')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''D'')
ITcolon (':')
ITchar (''C'')
ITcolon (':')
ITchar (''4'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('DC4'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('DC4')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''N'')
ITcolon (':')
ITchar (''A'')
ITcolon (':')
ITchar (''K'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('NAK'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('NAK')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''S'')
ITcolon (':')
ITchar (''Y'')
ITcolon (':')
ITchar (''N'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('SYN'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('SYN')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''E'')
ITcolon (':')
ITchar (''T'')
ITcolon (':')
ITchar (''B'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('ETB'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('ETB')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''C'')
ITcolon (':')
ITchar (''A'')
ITcolon (':')
ITchar (''N'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('CAN'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('CAN')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''E'')
ITcolon (':')
ITchar (''M'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('EM'')
ITcomma (',')
WHITE_SPACE ('  ')
ITstring ('"')
ITstring ('EM')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''S'')
ITcolon (':')
ITchar (''U'')
ITcolon (':')
ITchar (''B'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('SUB'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('SUB')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''E'')
ITcolon (':')
ITchar (''S'')
ITcolon (':')
ITchar (''C'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('ESC'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('ESC')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''F'')
ITcolon (':')
ITchar (''S'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('FS'')
ITcomma (',')
WHITE_SPACE ('  ')
ITstring ('"')
ITstring ('FS')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''G'')
ITcolon (':')
ITchar (''S'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('GS'')
ITcomma (',')
WHITE_SPACE ('  ')
ITstring ('"')
ITstring ('GS')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''R'')
ITcolon (':')
ITchar (''S'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('RS'')
ITcomma (',')
WHITE_SPACE ('  ')
ITstring ('"')
ITstring ('RS')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''U'')
ITcolon (':')
ITchar (''S'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('US'')
ITcomma (',')
WHITE_SPACE ('  ')
ITstring ('"')
ITstring ('US')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''S'')
ITcolon (':')
ITchar (''P'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('SP'')
ITcomma (',')
WHITE_SPACE ('  ')
ITstring ('"')
ITstring ('SP')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''D'')
ITcolon (':')
ITchar (''E'')
ITcolon (':')
ITchar (''L'')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('3')
WHITE_SPACE (' ')
ITvarsym ('>>')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITsimpleQuote (''')
ITvarsym ('\')
ITconid ('DEL'')
ITcomma (',')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('DEL')
ITstring ('"')
ITcparen (')')
WHITE_SPACE ('\n\n')
ITlineComment ('-- Escaped numbers\n')
WHITE_SPACE ('\n        ')
ITchar (''o'')
ITcolon (':')
ITvarid ('c')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isOctDigit')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                    ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                    ')
IToparen ('(')
ITvarid ('n')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('raw')
ITcparen (')')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexOctal')
WHITE_SPACE ('\n                    ')
ITvarid ('n'')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('checkChar')
WHITE_SPACE (' ')
ITvarid ('n')
WHITE_SPACE ('\n                    ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('n'')
ITcomma (',')
WHITE_SPACE (' ')
ITchar (''o'')
ITcolon (':')
ITvarid ('raw')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITchar (''x'')
ITcolon (':')
ITvarid ('c')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isHexDigit')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                    ')
ITvarid ('discard')
WHITE_SPACE (' ')
ITinteger ('1')
WHITE_SPACE ('\n                    ')
IToparen ('(')
ITvarid ('n')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('raw')
ITcparen (')')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexHexadecimal')
WHITE_SPACE ('\n                    ')
ITvarid ('n'')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('checkChar')
WHITE_SPACE (' ')
ITvarid ('n')
WHITE_SPACE ('\n                    ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('n'')
ITcomma (',')
WHITE_SPACE (' ')
ITchar (''x'')
ITcolon (':')
ITvarid ('raw')
ITcparen (')')
WHITE_SPACE ('\n        ')
ITvarid ('c')
ITcolon (':')
ITunderscore ('_')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('isDigit')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n                    ')
IToparen ('(')
ITvarid ('n')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('raw')
ITcparen (')')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexDecimal')
WHITE_SPACE ('\n                    ')
ITvarid ('n'')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('checkChar')
WHITE_SPACE (' ')
ITvarid ('n')
WHITE_SPACE ('\n                    ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('n'')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('raw')
ITcparen (')')
WHITE_SPACE ('\n\n        ')
ITunderscore ('_')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('fail')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('Illegal escape sequence')
ITstring ('"')
WHITE_SPACE ('\n\n    ')
ITwhere ('where')
WHITE_SPACE ('\n    ')
ITvarid ('checkChar')
WHITE_SPACE (' ')
ITvarid ('n')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('n')
WHITE_SPACE (' ')
ITvarsym ('<=')
WHITE_SPACE (' ')
ITinteger ('0x10FFFF')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('chr')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('fromInteger')
WHITE_SPACE (' ')
ITvarid ('n')
ITcparen (')')
ITcparen (')')
WHITE_SPACE ('\n    ')
ITvarid ('checkChar')
WHITE_SPACE (' ')
ITunderscore ('_')
WHITE_SPACE ('                 ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('fail')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('Character constant out of range')
ITstring ('"')
WHITE_SPACE ('\n\n')
ITlineComment ('-- Production cntrl from section B.2\n')
WHITE_SPACE ('\n    ')
ITvarid ('cntrl')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Char')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Char')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('\n    ')
ITvarid ('cntrl')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('>=')
WHITE_SPACE (' ')
ITchar (''@'')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('<=')
WHITE_SPACE (' ')
ITchar (''_'')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('chr')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('ord')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('-')
WHITE_SPACE (' ')
ITvarid ('ord')
WHITE_SPACE (' ')
ITchar (''@'')
ITcparen (')')
ITcomma (',')
WHITE_SPACE (' ')
ITchar (''^'')
ITcolon (':')
ITvarid ('c')
ITcolon (':')
ITobrack ('[')
ITcbrack (']')
ITcparen (')')
WHITE_SPACE ('\n    ')
ITvarid ('cntrl')
WHITE_SPACE (' ')
ITunderscore ('_')
WHITE_SPACE ('                        ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('fail')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('Illegal control character')
ITstring ('"')
WHITE_SPACE ('\n\n')
ITlineComment ('-- assumes at least one octal digit\n')
ITvarid ('lexOctal')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Integer')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('\n')
ITvarid ('lexOctal')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITvarid ('ds')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
ITvarid ('isOctDigit')
WHITE_SPACE ('\n    ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('parseInteger')
WHITE_SPACE (' ')
ITinteger ('8')
WHITE_SPACE (' ')
ITvarid ('ds')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('ds')
ITcparen (')')
WHITE_SPACE ('\n\n')
ITlineComment ('-- assumes at least one binary digit\n')
ITvarid ('lexBinary')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Integer')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('\n')
ITvarid ('lexBinary')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITvarid ('ds')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
ITvarid ('isBinDigit')
WHITE_SPACE ('\n    ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('parseInteger')
WHITE_SPACE (' ')
ITinteger ('2')
WHITE_SPACE (' ')
ITvarid ('ds')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('ds')
ITcparen (')')
WHITE_SPACE ('\n\n')
ITlineComment ('-- assumes at least one hexadecimal digit\n')
ITvarid ('lexHexadecimal')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Integer')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('\n')
ITvarid ('lexHexadecimal')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITvarid ('ds')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
ITvarid ('isHexDigit')
WHITE_SPACE ('\n    ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('parseInteger')
WHITE_SPACE (' ')
ITinteger ('16')
WHITE_SPACE (' ')
ITvarid ('ds')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('ds')
ITcparen (')')
WHITE_SPACE ('\n\n')
ITlineComment ('-- assumes at least one decimal digit\n')
ITvarid ('lexDecimal')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Integer')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('String')
ITcparen (')')
WHITE_SPACE ('\n')
ITvarid ('lexDecimal')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n    ')
ITvarid ('ds')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('lexWhile')
WHITE_SPACE (' ')
ITvarid ('isDigit')
WHITE_SPACE ('\n    ')
ITvarid ('return')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('parseInteger')
WHITE_SPACE (' ')
ITinteger ('10')
WHITE_SPACE (' ')
ITvarid ('ds')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('ds')
ITcparen (')')
WHITE_SPACE ('\n\n')
ITlineComment ('-- Stolen from Hugs's Prelude\n')
ITvarid ('parseInteger')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Integer')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('String')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Integer')
WHITE_SPACE ('\n')
ITvarid ('parseInteger')
WHITE_SPACE (' ')
ITvarid ('radix')
WHITE_SPACE (' ')
ITvarid ('ds')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE ('\n    ')
ITvarid ('foldl1')
WHITE_SPACE (' ')
IToparen ('(')
ITvarsym ('\')
ITvarid ('n')
WHITE_SPACE (' ')
ITvarid ('d')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('n')
WHITE_SPACE (' ')
ITvarsym ('*')
WHITE_SPACE (' ')
ITvarid ('radix')
WHITE_SPACE (' ')
ITvarsym ('+')
WHITE_SPACE (' ')
ITvarid ('d')
ITcparen (')')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('map')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('toInteger')
WHITE_SPACE (' ')
ITvarsym ('.')
WHITE_SPACE (' ')
ITvarid ('digitToInt')
ITcparen (')')
WHITE_SPACE (' ')
ITvarid ('ds')
ITcparen (')')
WHITE_SPACE ('\n\n')
ITvarid ('flagKW')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Token')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Lex')
WHITE_SPACE (' ')
ITvarid ('a')
WHITE_SPACE (' ')
IToparen ('(')
ITcparen (')')
WHITE_SPACE ('\n')
ITvarid ('flagKW')
WHITE_SPACE (' ')
ITvarid ('t')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE ('\n  ')
ITvarid ('when')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('t')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('KW_Do')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('KW_MDo')
ITcbrack (']')
ITcparen (')')
WHITE_SPACE (' ')
ITvarsym ('$')
WHITE_SPACE (' ')
ITdo ('do')
WHITE_SPACE ('\n       ')
ITvarid ('exts')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('getExtensionsL')
WHITE_SPACE ('\n       ')
ITvarid ('when')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('NondecreasingIndentation')
WHITE_SPACE (' ')
ITvarid ('`elem`')
WHITE_SPACE (' ')
ITvarid ('exts')
ITcparen (')')
WHITE_SPACE (' ')
ITvarid ('flagDo')
WHITE_SPACE ('\n\n')
ITblockComment ('-- | Selects ASCII binary digits, i.e. @\'0\'@..@\'1\'@.\n')
ITvarid ('isBinDigit')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Char')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Bool')
WHITE_SPACE ('\n')
ITvarid ('isBinDigit')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE ('  ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('>=')
WHITE_SPACE (' ')
ITchar (''0'')
WHITE_SPACE (' ')
ITvarsym ('&&')
WHITE_SPACE (' ')
ITvarid ('c')
WHITE_SPACE (' ')
ITvarsym ('<=')
WHITE_SPACE (' ')
ITchar (''1'')
WHITE_SPACE ('\n')
ITlineComment ('------------------------------------------------------------------\n')
ITlineComment ('-- "Pretty" printing for tokens\n')
WHITE_SPACE ('\n')
ITvarid ('showToken')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Token')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('String')
WHITE_SPACE ('\n')
ITvarid ('showToken')
WHITE_SPACE (' ')
ITvarid ('t')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITcase ('case')
WHITE_SPACE (' ')
ITvarid ('t')
WHITE_SPACE (' ')
ITof ('of')
WHITE_SPACE ('\n  ')
ITconid ('VarId')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE ('           ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE ('\n  ')
ITconid ('QVarId')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('q')
ITcomma (',')
ITvarid ('s')
ITcparen (')')
WHITE_SPACE ('      ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('q')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITchar (''.'')
ITcolon (':')
ITvarid ('s')
WHITE_SPACE ('\n  ')
ITconid ('IDupVarId')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITchar (''?'')
ITcolon (':')
ITvarid ('s')
WHITE_SPACE ('\n  ')
ITconid ('ILinVarId')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITchar (''%'')
ITcolon (':')
ITvarid ('s')
WHITE_SPACE ('\n  ')
ITconid ('ConId')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE ('           ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE ('\n  ')
ITconid ('QConId')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('q')
ITcomma (',')
ITvarid ('s')
ITcparen (')')
WHITE_SPACE ('      ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('q')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITchar (''.'')
ITcolon (':')
ITvarid ('s')
WHITE_SPACE ('\n  ')
ITconid ('DVarId')
WHITE_SPACE (' ')
ITvarid ('ss')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('intercalate')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('-')
ITstring ('"')
WHITE_SPACE (' ')
ITvarid ('ss')
WHITE_SPACE ('\n  ')
ITconid ('VarSym')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE ('          ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE ('\n  ')
ITconid ('ConSym')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE ('          ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE ('\n  ')
ITconid ('QVarSym')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('q')
ITcomma (',')
ITvarid ('s')
ITcparen (')')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('q')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITchar (''.'')
ITcolon (':')
ITvarid ('s')
WHITE_SPACE ('\n  ')
ITconid ('QConSym')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('q')
ITcomma (',')
ITvarid ('s')
ITcparen (')')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('q')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITchar (''.'')
ITcolon (':')
ITvarid ('s')
WHITE_SPACE ('\n  ')
ITconid ('IntTok')
WHITE_SPACE (' ')
IToparen ('(')
ITunderscore ('_')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('s')
ITcparen (')')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE ('\n  ')
ITconid ('FloatTok')
WHITE_SPACE (' ')
IToparen ('(')
ITunderscore ('_')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('s')
ITcparen (')')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE ('\n  ')
ITconid ('Character')
WHITE_SPACE (' ')
IToparen ('(')
ITunderscore ('_')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('s')
ITcparen (')')
WHITE_SPACE ('      ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITchar (''\''')
ITcolon (':')
ITvarid ('s')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITstring ('"')
ITstring (''')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('StringTok')
WHITE_SPACE (' ')
IToparen ('(')
ITunderscore ('_')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('s')
ITcparen (')')
WHITE_SPACE ('      ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITchar (''"'')
ITcolon (':')
ITvarid ('s')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('\"')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('IntTokHash')
WHITE_SPACE (' ')
IToparen ('(')
ITunderscore ('_')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('s')
ITcparen (')')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('#')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('WordTokHash')
WHITE_SPACE (' ')
IToparen ('(')
ITunderscore ('_')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('s')
ITcparen (')')
WHITE_SPACE ('    ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('##')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('FloatTokHash')
WHITE_SPACE (' ')
IToparen ('(')
ITunderscore ('_')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('s')
ITcparen (')')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('#')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('DoubleTokHash')
WHITE_SPACE (' ')
IToparen ('(')
ITunderscore ('_')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('s')
ITcparen (')')
WHITE_SPACE ('  ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('##')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('CharacterHash')
WHITE_SPACE (' ')
IToparen ('(')
ITunderscore ('_')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('s')
ITcparen (')')
WHITE_SPACE ('  ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITchar (''\''')
ITcolon (':')
ITvarid ('s')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITstring ('"')
ITstring (''#')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('StringHash')
WHITE_SPACE (' ')
IToparen ('(')
ITunderscore ('_')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('s')
ITcparen (')')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITchar (''"'')
ITcolon (':')
ITvarid ('s')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('\"#')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('LeftParen')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('(')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('RightParen')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring (')')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('LeftHashParen')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('(#')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('RightHashParen')
WHITE_SPACE ('    ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('#)')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('SemiColon')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring (';')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('LeftCurly')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('{')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('RightCurly')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('}')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('VRightCurly')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('virtual }')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('LeftSquare')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('[')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('RightSquare')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring (']')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('ParArrayLeftSquare')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('[:')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('ParArrayRightSquare')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring (':]')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('Comma')
WHITE_SPACE ('             ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring (',')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('Underscore')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('_')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('BackQuote')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('`')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('QuoteColon')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('':')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('Dot')
WHITE_SPACE ('               ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('.')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('DotDot')
WHITE_SPACE ('            ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('..')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('Colon')
WHITE_SPACE ('             ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring (':')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('DoubleColon')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('::')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('Equals')
WHITE_SPACE ('            ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('=')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('Backslash')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('\\')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('Bar')
WHITE_SPACE ('               ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('|')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('LeftArrow')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('<-')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('RightArrow')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('->')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('At')
WHITE_SPACE ('                ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('@')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('Tilde')
WHITE_SPACE ('             ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('~')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('DoubleArrow')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('=>')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('Minus')
WHITE_SPACE ('             ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('-')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('Exclamation')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('!')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('Star')
WHITE_SPACE ('              ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('*')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('LeftArrowTail')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('>-')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('RightArrowTail')
WHITE_SPACE ('    ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('-<')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('LeftDblArrowTail')
WHITE_SPACE ('  ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('>>-')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('RightDblArrowTail')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('-<<')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('THExpQuote')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('[|')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('THPatQuote')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('[p|')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('THDecQuote')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('[d|')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('THTypQuote')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('[t|')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('THCloseQuote')
WHITE_SPACE ('      ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('|]')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('THIdEscape')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE ('      ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITchar (''$'')
ITcolon (':')
ITvarid ('s')
WHITE_SPACE ('\n  ')
ITconid ('THParenEscape')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('$(')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('THVarQuote')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring (''')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('THTyQuote')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('''')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('THQuasiQuote')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('n')
ITcomma (',')
ITvarid ('q')
ITcparen (')')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('[$')
ITstring ('"')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITvarid ('n')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('|')
ITstring ('"')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITvarid ('q')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITstring ('"')
ITstring (']')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('RPGuardOpen')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('(|')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('RPGuardClose')
WHITE_SPACE ('      ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('|)')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('RPCAt')
WHITE_SPACE ('             ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('@:')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('XCodeTagOpen')
WHITE_SPACE ('      ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('<%')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('XCodeTagClose')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('%>')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('XStdTagOpen')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('<')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('XStdTagClose')
WHITE_SPACE ('      ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('>')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('XCloseTagOpen')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('</')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('XEmptyTagClose')
WHITE_SPACE ('    ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('/>')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('XPCDATA')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('PCDATA ')
ITstring ('"')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITvarid ('s')
WHITE_SPACE ('\n  ')
ITconid ('XRPatOpen')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('<[')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('XRPatClose')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring (']>')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('PragmaEnd')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('#-}')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('RULES')
WHITE_SPACE ('             ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('{-# RULES')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('INLINE')
WHITE_SPACE (' ')
ITvarid ('b')
WHITE_SPACE ('          ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('{-# ')
ITstring ('"')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITif ('if')
WHITE_SPACE (' ')
ITvarid ('b')
WHITE_SPACE (' ')
ITthen ('then')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('INLINE')
ITstring ('"')
WHITE_SPACE (' ')
ITelse ('else')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('NOINLINE')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('INLINE_CONLIKE')
WHITE_SPACE ('    ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('{-# ')
ITstring ('"')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('INLINE CONLIKE')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('SPECIALISE')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('{-# SPECIALISE')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('SPECIALISE_INLINE')
WHITE_SPACE (' ')
ITvarid ('b')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('{-# SPECIALISE ')
ITstring ('"')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITif ('if')
WHITE_SPACE (' ')
ITvarid ('b')
WHITE_SPACE (' ')
ITthen ('then')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('INLINE')
ITstring ('"')
WHITE_SPACE (' ')
ITelse ('else')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('NOINLINE')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('SOURCE')
WHITE_SPACE ('            ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('{-# SOURCE')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('DEPRECATED')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('{-# DEPRECATED')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('WARNING')
WHITE_SPACE ('           ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('{-# WARNING')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('SCC')
WHITE_SPACE ('               ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('{-# SCC')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('GENERATED')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('{-# GENERATED')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('CORE')
WHITE_SPACE ('              ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('{-# CORE')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('UNPACK')
WHITE_SPACE ('            ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('{-# UNPACK')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('OPTIONS')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('mt')
ITcomma (',')
ITunderscore ('_')
ITcparen (')')
WHITE_SPACE ('    ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('{-# OPTIONS')
ITstring ('"')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITvarid ('maybe')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('"')
WHITE_SPACE (' ')
IToparen ('(')
ITchar ('':'')
ITcolon (':')
ITcparen (')')
WHITE_SPACE (' ')
ITvarid ('mt')
WHITE_SPACE (' ')
ITvarsym ('++')
WHITE_SPACE (' ')
ITstring ('"')
ITstring (' ...')
ITstring ('"')
WHITE_SPACE ('\n')
ITlineComment ('--  CFILES  s         -> "{-# CFILES ..."\n')
ITlineComment ('--  INCLUDE s         -> "{-# INCLUDE ..."\n')
WHITE_SPACE ('  ')
ITconid ('LANGUAGE')
WHITE_SPACE ('          ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('{-# LANGUAGE')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('ANN')
WHITE_SPACE ('               ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('{-# ANN')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('MINIMAL')
WHITE_SPACE ('           ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('{-# MINIMAL')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('NO_OVERLAP')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('{-# NO_OVERLAP')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('OVERLAP')
WHITE_SPACE ('           ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('{-# OVERLAP')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('INCOHERENT')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('{-# INCOHERENT')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_As')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('as')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_By')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('by')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Case')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('case')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Class')
WHITE_SPACE ('      ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('class')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Data')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('data')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Default')
WHITE_SPACE ('    ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('default')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Deriving')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('deriving')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Do')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('do')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_MDo')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('mdo')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Else')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('else')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Family')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('family')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Forall')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('forall')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Group')
WHITE_SPACE ('      ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('group')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Hiding')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('hiding')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_If')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('if')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Import')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('import')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_In')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('in')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Infix')
WHITE_SPACE ('      ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('infix')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_InfixL')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('infixl')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_InfixR')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('infixr')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Instance')
WHITE_SPACE ('   ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('instance')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Let')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('let')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Module')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('module')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_NewType')
WHITE_SPACE ('    ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('newtype')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Of')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('of')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Proc')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('proc')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Rec')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('rec')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Then')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('then')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Type')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('type')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Using')
WHITE_SPACE ('      ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('using')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Where')
WHITE_SPACE ('      ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('where')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Qualified')
WHITE_SPACE ('  ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('qualified')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Foreign')
WHITE_SPACE ('    ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('foreign')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Export')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('export')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Safe')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('safe')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Unsafe')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('unsafe')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Threadsafe')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('threadsafe')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Interruptible')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('interruptible')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_StdCall')
WHITE_SPACE ('    ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('stdcall')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_CCall')
WHITE_SPACE ('      ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('ccall')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('XChildTagOpen')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('<%>')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_CPlusPlus')
WHITE_SPACE ('  ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('cplusplus')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_DotNet')
WHITE_SPACE ('     ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('dotnet')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Jvm')
WHITE_SPACE ('        ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('jvm')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_Js')
WHITE_SPACE ('         ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('js')
ITstring ('"')
WHITE_SPACE ('\n  ')
ITconid ('KW_CApi')
WHITE_SPACE ('       ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('capi')
ITstring ('"')
WHITE_SPACE ('\n\n  ')
ITconid ('EOF')
WHITE_SPACE ('           ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('EOF')
ITstring ('"')
WHITE_SPACE ('\n')
