ITlineComment ('-- NOTE: This file is auto-generated.\n')
ITinline_prag ('{-#')
ITline_prag (' LANGUAGE DeriveDataTypeable ')
ITline_prag ('#-}')
WHITE_SPACE ('\n')
ITinline_prag ('{-#')
ITline_prag (' LANGUAGE CPP                ')
ITline_prag ('#-}')
WHITE_SPACE ('\n')
ITblockComment ('-- | Module to be shared between server and client.\n')
ITlineComment ('--\n')
ITlineComment ('-- This module must be valid for both GHC and Fay.\n')
ITmodule ('module')
WHITE_SPACE (' ')
ITconid ('Language.Fay.Yesod')
WHITE_SPACE (' ')
ITwhere ('where')
WHITE_SPACE ('\n\n')
ITimport ('import')
WHITE_SPACE ('           ')
ITconid ('Prelude')
WHITE_SPACE ('\n')
ITlineComment ('#ifdef FAY')
WHITE_SPACE ('\n')
ITimport ('import')
WHITE_SPACE ('           ')
ITconid ('FFI')
WHITE_SPACE ('\n')
ITlineComment ('#else')
WHITE_SPACE ('\n')
ITimport ('import')
WHITE_SPACE ('           ')
ITconid ('Fay.FFI')
WHITE_SPACE ('\n')
ITlineComment ('#endif')
WHITE_SPACE ('\n')
ITimport ('import')
WHITE_SPACE ('           ')
ITconid ('Data.Data')
WHITE_SPACE ('\n\n')
ITlineComment ('#ifdef FAY')
WHITE_SPACE ('\n\n')
ITdata ('data')
WHITE_SPACE (' ')
ITconid ('Text')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITconid ('Text')
WHITE_SPACE ('\n    ')
ITderiving ('deriving')
WHITE_SPACE (' ')
IToparen ('(')
ITconid ('Show')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('Read')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('Eq')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('Typeable')
ITcomma (',')
WHITE_SPACE (' ')
ITconid ('Data')
ITcparen (')')
WHITE_SPACE ('\n\n')
ITvarid ('fromString')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('String')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Text')
WHITE_SPACE ('\n')
ITvarid ('fromString')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('ffi')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('%1')
ITstring ('"')
WHITE_SPACE ('\n\n')
ITvarid ('toString')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Text')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('String')
WHITE_SPACE ('\n')
ITvarid ('toString')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('ffi')
WHITE_SPACE (' ')
ITstring ('"')
ITstring ('%1')
ITstring ('"')
WHITE_SPACE ('\n\n')
ITlineComment ('#else')
WHITE_SPACE ('\n\n')
ITimport ('import')
WHITE_SPACE (' ')
ITqualified ('qualified')
WHITE_SPACE (' ')
ITconid ('Data.Text')
WHITE_SPACE (' ')
ITas ('as')
WHITE_SPACE (' ')
ITconid ('T')
WHITE_SPACE ('\n\n')
ITtype ('type')
WHITE_SPACE (' ')
ITconid ('Text')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITconid ('T.Text')
WHITE_SPACE ('\n\n')
ITvarid ('fromString')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('String')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Text')
WHITE_SPACE ('\n')
ITvarid ('fromString')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('T.pack')
WHITE_SPACE ('\n\n')
ITvarid ('toString')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('Text')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('String')
WHITE_SPACE ('\n')
ITvarid ('toString')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('T.unpack')
WHITE_SPACE ('\n\n')
ITlineComment ('#endif')
WHITE_SPACE ('\n')
