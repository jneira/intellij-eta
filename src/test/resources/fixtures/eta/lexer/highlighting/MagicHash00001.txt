ITinline_prag ('{-#')
ITline_prag (' LANGUAGE MagicHash ')
ITline_prag ('#-}')
WHITE_SPACE ('\n')
ITmodule ('module')
WHITE_SPACE (' ')
ITconid ('MagicHash00001')
WHITE_SPACE (' ')
ITwhere ('where')
WHITE_SPACE ('\n\n')
ITlineComment ('-- Ripped from Data.List, verify I# constructor is valid.\n')
WHITE_SPACE ('\n')
ITvarid ('findIndices')
WHITE_SPACE ('      ')
ITdcolon ('::')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('a')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('Bool')
ITcparen (')')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITobrack ('[')
ITvarid ('a')
ITcbrack (']')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITobrack ('[')
ITconid ('Int')
ITcbrack (']')
WHITE_SPACE ('\n')
ITlineComment ('#ifdef USE_REPORT_PRELUDE')
WHITE_SPACE ('\n')
ITvarid ('findIndices')
WHITE_SPACE (' ')
ITvarid ('p')
WHITE_SPACE (' ')
ITvarid ('xs')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITobrack ('[')
WHITE_SPACE (' ')
ITvarid ('i')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('x')
ITcomma (',')
ITvarid ('i')
ITcparen (')')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('zip')
WHITE_SPACE (' ')
ITvarid ('xs')
WHITE_SPACE (' ')
ITobrack ('[')
ITinteger ('0')
ITdotdot ('..')
ITcbrack (']')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('p')
WHITE_SPACE (' ')
ITvarid ('x')
ITcbrack (']')
WHITE_SPACE ('\n')
ITlineComment ('#else')
WHITE_SPACE ('\n')
ITlineComment ('-- Efficient definition\n')
ITvarid ('findIndices')
WHITE_SPACE (' ')
ITvarid ('p')
WHITE_SPACE (' ')
ITvarid ('ls')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('loop')
WHITE_SPACE (' ')
ITinteger ('0#')
WHITE_SPACE (' ')
ITvarid ('ls')
WHITE_SPACE ('\n                 ')
ITwhere ('where')
WHITE_SPACE ('\n                   ')
ITvarid ('loop')
WHITE_SPACE (' ')
ITunderscore ('_')
WHITE_SPACE (' ')
ITobrack ('[')
ITcbrack (']')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITobrack ('[')
ITcbrack (']')
WHITE_SPACE ('\n                   ')
ITvarid ('loop')
WHITE_SPACE (' ')
ITvarid ('n')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('x')
ITcolon (':')
ITvarid ('xs')
ITcparen (')')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('p')
WHITE_SPACE (' ')
ITvarid ('x')
WHITE_SPACE ('       ')
ITequal ('=')
WHITE_SPACE (' ')
ITconid ('I')
ITvarsym ('#')
WHITE_SPACE (' ')
ITvarid ('n')
WHITE_SPACE (' ')
ITcolon (':')
WHITE_SPACE (' ')
ITvarid ('loop')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('n')
WHITE_SPACE (' ')
ITvarsym ('+#')
WHITE_SPACE (' ')
ITinteger ('1#')
ITcparen (')')
WHITE_SPACE (' ')
ITvarid ('xs')
WHITE_SPACE ('\n                                 ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('otherwise')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarid ('loop')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('n')
WHITE_SPACE (' ')
ITvarsym ('+#')
WHITE_SPACE (' ')
ITinteger ('1#')
ITcparen (')')
WHITE_SPACE (' ')
ITvarid ('xs')
WHITE_SPACE ('\n')
ITlineComment ('#endif  /* USE_REPORT_PRELUDE */')
WHITE_SPACE ('\n\n')
