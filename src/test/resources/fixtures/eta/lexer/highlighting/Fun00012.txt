ITinline_prag ('{-#')
ITline_prag (' LANGUAGE TypeFamilies ')
ITline_prag ('#-}')
WHITE_SPACE ('\n')
ITinline_prag ('{-#')
ITline_prag (' LANGUAGE GADTs ')
ITline_prag ('#-}')
WHITE_SPACE ('\n')
ITinline_prag ('{-#')
ITline_prag (' LANGUAGE TransformListComp ')
ITline_prag ('#-}')
WHITE_SPACE ('\n\n')
ITmodule ('module')
WHITE_SPACE (' ')
ITconid ('Fun00012')
WHITE_SPACE (' ')
ITwhere ('where')
WHITE_SPACE ('\n\n')
ITdata ('data')
WHITE_SPACE (' ')
ITinstance ('instance')
WHITE_SPACE (' ')
ITconid ('A')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITconid ('M')
WHITE_SPACE (' ')
ITocurly ('{')
WHITE_SPACE (' ')
ITvarid ('unA')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('T')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('A')
WHITE_SPACE (' ')
ITccurly ('}')
WHITE_SPACE ('\n\n')
ITdata ('data')
WHITE_SPACE (' ')
ITinstance ('instance')
WHITE_SPACE (' ')
ITconid ('B')
WHITE_SPACE (' ')
ITwhere ('where')
WHITE_SPACE ('\n   ')
ITconid ('K')
WHITE_SPACE (' ')
ITdcolon ('::')
WHITE_SPACE (' ')
ITconid ('D')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITconid ('B')
WHITE_SPACE ('\n\n')
ITvarid ('f')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITobrack ('[')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('x')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('y')
ITcparen (')')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('x')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('xs')
ITcomma (',')
WHITE_SPACE ('\n               ')
ITvarid ('y')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('ys')
ITcomma (',')
WHITE_SPACE ('\n               ')
ITthen ('then')
WHITE_SPACE (' ')
ITvarid ('sortWith')
WHITE_SPACE (' ')
ITcbrack (']')
WHITE_SPACE ('\n\n')
ITvarid ('g')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITobrack ('[')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('x')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('y')
ITcparen (')')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('x')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('xs')
ITcomma (',')
WHITE_SPACE ('\n               ')
ITvarid ('y')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('ys')
ITcomma (',')
WHITE_SPACE ('\n               ')
ITthen ('then')
WHITE_SPACE (' ')
ITvarid ('sortWith')
WHITE_SPACE (' ')
ITvarid ('by')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('x')
WHITE_SPACE (' ')
ITvarsym ('+')
WHITE_SPACE (' ')
ITvarid ('y')
ITcparen (')')
WHITE_SPACE (' ')
ITcbrack (']')
WHITE_SPACE ('\n\n')
ITvarid ('h')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITobrack ('[')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('x')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('y')
ITcparen (')')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('x')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('xs')
ITcomma (',')
WHITE_SPACE ('\n               ')
ITvarid ('y')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('ys')
ITcomma (',')
WHITE_SPACE ('\n               ')
ITthen ('then')
WHITE_SPACE (' ')
ITvarid ('group')
WHITE_SPACE (' ')
ITvarid ('using')
WHITE_SPACE (' ')
ITvarid ('permutations')
WHITE_SPACE (' ')
ITcbrack (']')
WHITE_SPACE ('\n\n')
ITvarid ('i')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITobrack ('[')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('x')
ITcomma (',')
WHITE_SPACE (' ')
ITvarid ('y')
ITcparen (')')
WHITE_SPACE (' ')
ITvbar ('|')
WHITE_SPACE (' ')
ITvarid ('x')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('xs')
ITcomma (',')
WHITE_SPACE ('\n               ')
ITvarid ('y')
WHITE_SPACE (' ')
ITlarrow ('<-')
WHITE_SPACE (' ')
ITvarid ('ys')
ITcomma (',')
WHITE_SPACE ('\n               ')
ITthen ('then')
WHITE_SPACE (' ')
ITvarid ('group')
WHITE_SPACE (' ')
ITvarid ('by')
WHITE_SPACE (' ')
IToparen ('(')
ITvarid ('x')
WHITE_SPACE (' ')
ITvarsym ('+')
WHITE_SPACE (' ')
ITvarid ('y')
ITcparen (')')
WHITE_SPACE (' ')
ITvarid ('using')
WHITE_SPACE (' ')
ITvarid ('groupWith')
WHITE_SPACE (' ')
ITcbrack (']')
WHITE_SPACE ('\n\n')
ITinline_prag ('{-#')
ITline_prag (' RULES "f" f True = False ')
ITline_prag ('#-}')
