apply plugin: 'eta'
apply plugin: 'kotlin'

// Include the PsiViewer plugin if the ETAJ_DEV property is set, e.g. -DETAJ_DEV=1
if (System.getProperty("ETAJ_DEV") != null) intellij.plugins += ['PsiViewer:3.28.93']
// Include the HaskForce plugin version if the property is set, e.g. -DHASKFORCE=0.3.41
if (System.getProperty("HASKFORCE") != null) intellij.plugins += ['com.haskforce:' + System.getProperty("HASKFORCE")]

task runJFlex(type: Exec) {
  commandLine '../tools/run-jflex'
}

task cleanJFlex(type: Exec) {
  commandLine '../tools/run-jflex', 'clean'
}

dependencies {
  compile project(':eta-parser')
  compile project(':jps-shared')
  compile project(':jps-plugin')
  compile eta('base:[4.8,4.9[')
  compile eta('containers:0.5.10.+')
  compile eta('eta-java-interop:[0.1.3,0.2[')
}

compileJava.dependsOn(runJFlex)

[compileEta, compileTestEta].each {
  it.options {
    args = ['-Werror','-Wall','-fno-warn-orphans',
            '-fno-warn-missing-signatures','-fno-warn-unused-binds']
    extensions {
      DataKinds
      ExistentialQuantification
      FlexibleContexts
      FlexibleInstances
      FunctionalDependencies
      GeneralizedNewtypeDeriving
      LambdaCase
      MagicHash
      MultiParamTypeClasses
      NoImplicitPrelude
      OverloadedStrings
      RankNTypes
      RecordWildCards
      ScopedTypeVariables
      TypeFamilies
      TypeOperators
      UnboxedTuples
    }
  }
}

// clean.dependsOn(cleanJFlex)

prepareSandbox.dependsOn(compileEta)

static def getSandboxLibDir(Project project, Boolean test) {
  def pluginsDir = test ? "plugins-test" : "plugins"
  "${project.intellij.sandboxDirectory}/$pluginsDir/${project.intellij.pluginName}/lib/"
}
