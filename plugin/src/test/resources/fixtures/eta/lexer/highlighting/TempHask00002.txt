ITinline_prag ('{-#')
ITline_prag (' LANGUAGE FlexibleInstances ')
ITline_prag ('#-}')
WHITE_SPACE ('\n')
ITinline_prag ('{-#')
ITline_prag (' LANGUAGE QuasiQuotes       ')
ITline_prag ('#-}')
WHITE_SPACE ('\n')
ITinline_prag ('{-#')
ITline_prag (' LANGUAGE TemplateHaskell   ')
ITline_prag ('#-}')
WHITE_SPACE ('\n')
ITmodule ('module')
WHITE_SPACE (' ')
ITconid ('TempHask00002')
WHITE_SPACE (' ')
ITwhere ('where')
WHITE_SPACE ('\n\n')
ITopenExpQuote ('[')
ITvarid ('undefined')
ITvbar ('|')
ITquasiQuote ('\nsomething here "hello world"\n')
ITcloseQuote ('|]')
WHITE_SPACE ('\n\n')
ITopenExpQuote ('[|')
WHITE_SPACE (' ')
ITinteger ('7')
WHITE_SPACE (' ')
ITcloseQuote ('|]')
WHITE_SPACE ('\n\n')
ITopenExpQuote ('[')
ITvarid ('d')
ITvbar ('|')
ITquasiQuote (' 7 ')
ITcloseQuote ('|]')
WHITE_SPACE ('\n\n')
ITopenExpQuote ('[')
ITvarid ('t')
ITvbar ('|')
ITquasiQuote (' Int ')
ITcloseQuote ('|]')
WHITE_SPACE ('\n\n')
ITopenExpQuote ('[')
ITvarid ('p')
ITvbar ('|')
ITquasiQuote (' 7 ')
ITcloseQuote ('|]')
WHITE_SPACE ('\n\n')
ITparenEscape ('$(')
ITvarid ('deriveStuff')
WHITE_SPACE (' ')
ITsimpleQuote (''')
ITvarid ('f')
ITcparen (')')
WHITE_SPACE ('\n')
ITvarid ('m')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITidEscape ('$x')
WHITE_SPACE ('\n\n')
ITtyQuote ('''')
ITconid ('T')
WHITE_SPACE ('\n\n')
ITvarid ('f')
WHITE_SPACE (' ')
ITvarid ('n')
WHITE_SPACE (' ')
ITequal ('=')
WHITE_SPACE (' ')
ITvarsym ('\')
WHITE_SPACE (' ')
ITopenExpQuote ('[')
ITvarid ('haskell')
ITvbar ('|')
ITquasiQuote ('y')
ITcloseQuote ('|]')
WHITE_SPACE (' ')
ITrarrow ('->')
WHITE_SPACE (' ')
ITvarid ('y')
ITvarsym ('+')
ITvarid ('n')
WHITE_SPACE ('\n')
